{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlantillaCvService {\n  constructor(http) {\n    this.http = http;\n    this.datosPUrl = 'http://localhost:3000/api/datosP'; // Ajusta la URL según tu API\n    this.perfilUrl = 'http://localhost:3000/api/perfil'; // Ajusta la URL según tu API\n  }\n\n  getDatosP() {\n    return this.http.get(this.datosPUrl);\n  }\n  getPerfil() {\n    return this.http.get(this.perfilUrl);\n  }\n  static #_ = this.ɵfac = function PlantillaCvService_Factory(t) {\n    return new (t || PlantillaCvService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlantillaCvService,\n    factory: PlantillaCvService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlantillaCvService","constructor","http","datosPUrl","perfilUrl","getDatosP","get","getPerfil","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\services\\plantilla-cv.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DatosCvModel, PerfilCvModel } from '../models/plantillaCvModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlantillaCvService {\r\n\r\n  private datosPUrl = 'http://localhost:3000/api/datosP'; // Ajusta la URL según tu API\r\n  private perfilUrl = 'http://localhost:3000/api/perfil'; // Ajusta la URL según tu API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDatosP(): Observable<DatosCvModel[]> {\r\n    return this.http.get<DatosCvModel[]>(this.datosPUrl);\r\n  }\r\n\r\n  getPerfil(): Observable<PerfilCvModel[]> {\r\n    return this.http.get<PerfilCvModel[]>(this.perfilUrl);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAK7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,SAAS,GAAG,kCAAkC,CAAC,CAAC;IAChD,KAAAC,SAAS,GAAG,kCAAkC,CAAC,CAAC;EAEhB;;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAiB,IAAI,CAACH,SAAS,CAAC;EACtD;EAEAI,SAASA,CAAA;IACP,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAkB,IAAI,CAACF,SAAS,CAAC;EACvD;EAAC,QAAAI,CAAA,G;qBAbUR,kBAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBb,kBAAkB;IAAAc,OAAA,EAAlBd,kBAAkB,CAAAe,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}