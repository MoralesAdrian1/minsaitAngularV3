{"ast":null,"code":"import { catchError, map, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CiudadService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getCiudad() {\n    return this.http.get(`${this.domain}/api/ciudad`).pipe(map(res => res));\n  }\n  addCiudad(newCiudad) {\n    return this.http.post(`${this.domain}/api/ciudad`, newCiudad).pipe(map(res => res));\n  }\n  deleteCiudad(id) {\n    return this.http.delete(`${this.domain}/api/ciudad/${id}`).pipe(map(res => res));\n  }\n  updateCiudad(newCiudad) {\n    return this.http.put(`${this.domain}/api/ciudad/${newCiudad._id}`, newCiudad).pipe(map(res => res));\n  }\n  getPaises() {\n    return this.http.get(`${this.domain}/api/pais`).pipe(catchError(error => throwError('Error al cargar Paises')));\n  }\n  getEstados() {\n    return this.http.get(`${this.domain}/api/estado`).pipe(catchError(error => throwError('Error al cargar Estados')));\n  }\n  static #_ = this.ɵfac = function CiudadService_Factory(t) {\n    return new (t || CiudadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CiudadService,\n    factory: CiudadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","map","throwError","CiudadService","constructor","http","domain","getCiudad","get","pipe","res","addCiudad","newCiudad","post","deleteCiudad","id","delete","updateCiudad","put","_id","getPaises","error","getEstados","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\services\\ciudad.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CiudadModel } from '../models/ciudadModel';\nimport { Observable, catchError, map, throwError } from 'rxjs';\nimport { EstadoModel } from '../models/estadoModel';\nimport { paisModel } from '../models/paisModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CiudadService {\n\n  constructor(private http: HttpClient) { }\n  domain: string=\"http://localhost:3000\";\n  getCiudad() {\n    return this.http.get<CiudadModel[]>(`${this.domain}/api/ciudad`).pipe(\n      map(res => res)\n    );\n  }\n\n  addCiudad(newCiudad: CiudadModel){\n    return this.http.post<CiudadModel>(`${this.domain}/api/ciudad`,newCiudad).pipe(\n      map(res => res)\n      );\n  }\n\n  deleteCiudad(id: string){\n    return this.http.delete<CiudadModel>(`${this.domain}/api/ciudad/${id}`).pipe(\n      map(res => res)\n      );\n  }\n  updateCiudad(newCiudad: CiudadModel) {\n    return this.http.put(`${this.domain}/api/ciudad/${newCiudad._id}`, newCiudad).pipe(\n      map(res => res)\n    );\n  }\n  getPaises(): Observable<paisModel[]> {\n    return this.http.get<paisModel[]>(`${this.domain}/api/pais`).pipe(\n      catchError((error: any) => throwError('Error al cargar Paises'))\n    );\n  }\n  getEstados(): Observable<EstadoModel[]> {\n    return this.http.get<EstadoModel[]>(`${this.domain}/api/estado`).pipe(\n      catchError((error: any) => throwError('Error al cargar Estados'))\n    );\n  }\n}\n"],"mappings":"AAGA,SAAqBA,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAO9D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI,CACnER,GAAG,CAACS,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAC,SAASA,CAACC,SAAsB;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,GAAG,IAAI,CAACP,MAAM,aAAa,EAACM,SAAS,CAAC,CAACH,IAAI,CAC5ER,GAAG,CAACS,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EAEAI,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAc,GAAG,IAAI,CAACV,MAAM,eAAeS,EAAE,EAAE,CAAC,CAACN,IAAI,CAC1ER,GAAG,CAACS,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EACAO,YAAYA,CAACL,SAAsB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,eAAeM,SAAS,CAACO,GAAG,EAAE,EAAEP,SAAS,CAAC,CAACH,IAAI,CAChFR,GAAG,CAACS,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EACAU,SAASA,CAAA;IACP,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,WAAW,CAAC,CAACG,IAAI,CAC/DT,UAAU,CAAEqB,KAAU,IAAKnB,UAAU,CAAC,wBAAwB,CAAC,CAAC,CACjE;EACH;EACAoB,UAAUA,CAAA;IACR,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI,CACnET,UAAU,CAAEqB,KAAU,IAAKnB,UAAU,CAAC,yBAAyB,CAAC,CAAC,CAClE;EACH;EAAC,QAAAqB,CAAA,G;qBAnCUpB,aAAa,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbzB,aAAa;IAAA0B,OAAA,EAAb1B,aAAa,CAAA2B,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}