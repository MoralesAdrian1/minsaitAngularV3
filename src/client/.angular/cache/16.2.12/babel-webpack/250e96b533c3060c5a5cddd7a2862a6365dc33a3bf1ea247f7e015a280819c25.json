{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DatosPService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getDatosP() {\n    return this.http.get(`${this.domain}/api/datosP`).pipe(map(res => res));\n  }\n  addDatosP(newDatosP) {\n    return this.http.post(`${this.domain}/api/datosP`, newDatosP).pipe(map(res => res));\n  }\n  deleteDatosP(id) {\n    return this.http.delete(`${this.domain}/api/datosP/${id}`).pipe(map(res => res));\n  }\n  updateDatosP(newDatosP) {\n    return this.http.put(`${this.domain}/api/datosP/${newDatosP._id}`, newDatosP).pipe(map(res => res));\n  }\n  getCiudadesPorPais(pais) {\n    return this.http.get(`${this.domain}/api/ciudades?pais=${pais}`).pipe(map(res => res));\n  }\n  getEstadosPorCiudad(ciudad) {\n    return this.http.get(`${this.domain}/api/estados?ciudad=${ciudad}`).pipe(map(res => res));\n  }\n  static #_ = this.ɵfac = function DatosPService_Factory(t) {\n    return new (t || DatosPService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DatosPService,\n    factory: DatosPService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","DatosPService","constructor","http","domain","getDatosP","get","pipe","res","addDatosP","newDatosP","post","deleteDatosP","id","delete","updateDatosP","put","_id","getCiudadesPorPais","pais","getEstadosPorCiudad","ciudad","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\services\\datos-pservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\n\nimport{DatosPModel} from'../models/datosPModel';\nimport { lugarModel } from '../models/lugarModel';\nimport { Observable, throwError } from 'rxjs';\nimport { paisModel } from '../models/paisModel';\nimport { CiudadModel } from '../models/ciudadModel';\nimport { EstadoModel } from '../models/estadoModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatosPService {\n\n  constructor(private http: HttpClient) { }\n  domain: string=\"http://localhost:3000\";\n  getDatosP() {\n    return this.http.get<DatosPModel[]>(`${this.domain}/api/datosP`).pipe(\n      map(res => res)\n    );\n  }\n\n  addDatosP(newDatosP: DatosPModel){\n    return this.http.post<DatosPModel>(`${this.domain}/api/datosP`,newDatosP).pipe(\n      map(res => res)\n      );\n  }\n\n  deleteDatosP(id: string){\n    return this.http.delete<DatosPModel>(`${this.domain}/api/datosP/${id}`).pipe(\n      map(res => res)\n      );\n  }\n  updateDatosP(newDatosP: DatosPModel) {\n    return this.http.put(`${this.domain}/api/datosP/${newDatosP._id}`, newDatosP).pipe(\n      map(res => res)\n    );\n  }\n  getCiudadesPorPais(pais: string): Observable<CiudadModel[]> {\n    return this.http.get<CiudadModel[]>(`${this.domain}/api/ciudades?pais=${pais}`).pipe(\n      map(res => res)\n    );\n  }\n\n  getEstadosPorCiudad(ciudad: string): Observable<EstadoModel[]> {\n    return this.http.get<EstadoModel[]>(`${this.domain}/api/estados?ciudad=${ciudad}`).pipe(\n      map(res => res)\n    );\n  }\n  \n\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,gBAAgB;;;AAYhD,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI,CACnEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAC,SAASA,CAACC,SAAsB;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,GAAG,IAAI,CAACP,MAAM,aAAa,EAACM,SAAS,CAAC,CAACH,IAAI,CAC5EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EAEAI,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAc,GAAG,IAAI,CAACV,MAAM,eAAeS,EAAE,EAAE,CAAC,CAACN,IAAI,CAC1EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EACAO,YAAYA,CAACL,SAAsB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,eAAeM,SAAS,CAACO,GAAG,EAAE,EAAEP,SAAS,CAAC,CAACH,IAAI,CAChFP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EACAU,kBAAkBA,CAACC,IAAY;IAC7B,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,sBAAsBe,IAAI,EAAE,CAAC,CAACZ,IAAI,CAClFP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAY,mBAAmBA,CAACC,MAAc;IAChC,OAAO,IAAI,CAAClB,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,uBAAuBiB,MAAM,EAAE,CAAC,CAACd,IAAI,CACrFP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAAC,QAAAc,CAAA,G;qBApCUrB,aAAa,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb1B,aAAa;IAAA2B,OAAA,EAAb3B,aAAa,CAAA4B,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}