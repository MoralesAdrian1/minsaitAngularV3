{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ciudad.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CiudadComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r3.nombrePais);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pais_r3.nombrePais);\n  }\n}\nfunction CiudadComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estado_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", estado_r4.nombreEstado);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(estado_r4.nombreEstado);\n  }\n}\nfunction CiudadComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CiudadComponent_tr_47_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const ciudad_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editarCiudad(ciudad_r5));\n    });\n    i0.ɵɵelement(9, \"i\", 28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CiudadComponent_tr_47_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const ciudad_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.eliminarCiudad(ciudad_r5._id));\n    });\n    i0.ɵɵelement(12, \"i\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ciudad_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ciudad_r5.nombrePais);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ciudad_r5.nombreEstado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ciudad_r5.nombreCiudad);\n  }\n}\nexport class CiudadComponent {\n  constructor(ciudadService, fb) {\n    this.ciudadService = ciudadService;\n    this.fb = fb;\n    this.ciudad = [];\n    this.estado = [];\n    this.paises = [];\n    this.allEstados = []; // Lista de todos los estados\n    this.filteredEstados = []; // Lista de estados filtrados\n    this.ciudadForm = this.fb.group({\n      _id: [''],\n      nombrePais: [\"\", Validators.required],\n      nombreEstado: [\"\", Validators.required],\n      nombreCiudad: [\"\", Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarCiudad();\n    this.cargarPaises();\n    this.cargarEstado();\n    this.cargarEstados();\n  }\n  cargarCiudad() {\n    this.ciudadService.getCiudad().subscribe(data => {\n      this.ciudad = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarCiudad() {\n    if (this.ciudadForm.valid) {\n      this.ciudadService.addCiudad(this.ciudadForm.value).subscribe(() => {\n        this.cargarCiudad();\n        this.ciudadForm.reset();\n      }, error => {\n        console.error('Error al agregar ciudad:', error);\n      });\n    }\n  }\n  actualizarCiudad() {\n    if (this.ciudadForm.valid) {\n      this.ciudadService.updateCiudad(this.ciudadForm.value).subscribe(() => {\n        this.cargarCiudad();\n        this.ciudadForm.reset();\n      }, error => {\n        console.error('Error al actualizar Ciudades:', error);\n      });\n    }\n  }\n  eliminarCiudad(id) {\n    if (id) {\n      this.ciudadService.deleteCiudad(id).subscribe(data => {\n        console.log('ciudad eliminado:', data);\n        this.cargarCiudad();\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n      });\n    }\n  }\n  editarCiudad(ciudad) {\n    this.ciudadForm.patchValue(ciudad);\n  }\n  cargarPaises() {\n    this.ciudadService.getPaises().subscribe(data => {\n      this.paises = data;\n    }, error => {\n      console.error('Error al cargar Paises:', error);\n    });\n  }\n  cargarEstado() {\n    this.ciudadService.getEstados().subscribe(data => {\n      this.estado = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  filtrarEstadosPorPais(nombrePais) {\n    this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\n  }\n  cargarEstados() {\n    this.ciudadService.getEstados().subscribe(data => {\n      this.allEstados = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  onPaisSelected(event) {\n    const nombrePaisSeleccionado = event.target.value;\n    if (nombrePaisSeleccionado !== null) {\n      this.filtrarEstadosPorPais(nombrePaisSeleccionado);\n    }\n  }\n  static #_ = this.ɵfac = function CiudadComponent_Factory(t) {\n    return new (t || CiudadComponent)(i0.ɵɵdirectiveInject(i1.CiudadService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CiudadComponent,\n    selectors: [[\"app-ciudad\"]],\n    decls: 49,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"text-dart\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"nombrePais\", 1, \"text-dart\"], [\"id\", \"nombrePais\", \"name\", \"nombrePais\", \"formControlName\", \"nombrePais\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"nombreEstado\", 1, \"text-dart\"], [\"id\", \"nombreEstado\", \"name\", \"nombreEstado\", \"formControlName\", \"nombreEstado\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"nombreCiudad\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"nombreCiudad\", \"name\", \"nombreCiudad\", \"formControlName\", \"nombreCiudad\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"col-md-8\"], [1, \"table\", \"table-striped\", \"table-hover\"], [1, \"table-primary\"], [\"scope\", \"col\"], [\"id\", \"datosP-table-body\"], [4, \"ngFor\", \"ngForOf\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\", \"integrity\", \"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\", \"crossorigin\", \"anonymous\"], [3, \"value\"], [1, \"btn\", \"btn-sm\", \"ms-2\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ms-2\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]],\n    template: function CiudadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Agregar/Editar Paises\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6)(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Nombre Del pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 9);\n        i0.ɵɵlistener(\"change\", function CiudadComponent_Template_select_change_12_listener($event) {\n          return ctx.onPaisSelected($event);\n        });\n        i0.ɵɵelementStart(13, \"option\", 10);\n        i0.ɵɵtext(14, \"Selecciona un pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, CiudadComponent_option_15_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Nombre Del Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 13)(20, \"option\", 10);\n        i0.ɵɵtext(21, \"Selecciona un Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, CiudadComponent_option_22_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 14);\n        i0.ɵɵtext(25, \"Nombre De la Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 16)(28, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function CiudadComponent_Template_button_click_28_listener() {\n          return ctx.agregarCiudad();\n        });\n        i0.ɵɵtext(29, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function CiudadComponent_Template_button_click_30_listener() {\n          return ctx.actualizarCiudad();\n        });\n        i0.ɵɵtext(31, \"Actualizar\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(32, \"div\", 19)(33, \"table\", 20)(34, \"thead\")(35, \"tr\", 21)(36, \"th\", 22);\n        i0.ɵɵtext(37, \"Nombre Del Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"th\", 22);\n        i0.ɵɵtext(39, \"Nombre Del Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"th\", 22);\n        i0.ɵɵtext(41, \"Nombre De la Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"th\", 22);\n        i0.ɵɵtext(43, \"Editar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"th\", 22);\n        i0.ɵɵtext(45, \"Eliminar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"tbody\", 23);\n        i0.ɵɵtemplate(47, CiudadComponent_tr_47_Template, 13, 3, \"tr\", 24);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(48, \"link\", 25);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.ciudadForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.paises);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredEstados);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ciudad);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","pais_r3","nombrePais","ɵɵadvance","ɵɵtextInterpolate","estado_r4","nombreEstado","ɵɵlistener","CiudadComponent_tr_47_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r7","ciudad_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","editarCiudad","ɵɵelement","CiudadComponent_tr_47_Template_button_click_11_listener","ctx_r8","eliminarCiudad","_id","nombreCiudad","CiudadComponent","constructor","ciudadService","fb","ciudad","estado","paises","allEstados","filteredEstados","ciudadForm","group","required","ngOnInit","cargarCiudad","cargarPaises","cargarEstado","cargarEstados","getCiudad","subscribe","data","error","console","agregarCiudad","valid","addCiudad","value","reset","actualizarCiudad","updateCiudad","id","deleteCiudad","log","patchValue","getPaises","getEstados","filtrarEstadosPorPais","filter","onPaisSelected","event","nombrePaisSeleccionado","target","_","ɵɵdirectiveInject","i1","CiudadService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","CiudadComponent_Template","rf","ctx","CiudadComponent_Template_select_change_12_listener","$event","ɵɵtemplate","CiudadComponent_option_15_Template","CiudadComponent_option_22_Template","CiudadComponent_Template_button_click_28_listener","CiudadComponent_Template_button_click_30_listener","CiudadComponent_tr_47_Template"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\ciudad\\ciudad.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\ciudad\\ciudad.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CiudadModel } from 'src/app/models/ciudadModel';\r\nimport { EstadoModel } from 'src/app/models/estadoModel';\r\nimport { paisModel } from 'src/app/models/paisModel';\r\nimport { CiudadService } from 'src/app/services/ciudad.service';\r\n\r\n@Component({\r\n  selector: 'app-ciudad',\r\n  templateUrl: './ciudad.component.html',\r\n  styleUrls: ['./ciudad.component.css']\r\n})\r\nexport class CiudadComponent implements OnInit{\r\n  ciudad: CiudadModel[] = [];\r\n  estado: EstadoModel[] = [];\r\n  paises: paisModel[] = [];\r\n  allEstados: EstadoModel[] = []; // Lista de todos los estados\r\n  filteredEstados: EstadoModel[] = []; // Lista de estados filtrados\r\n  ciudadForm: FormGroup;\r\n\r\n  constructor(private ciudadService: CiudadService, private fb: FormBuilder) {\r\n    this.ciudadForm = this.fb.group({\r\n      _id: [''],\r\n      nombrePais: [\"\", Validators.required],\r\n      nombreEstado: [\"\", Validators.required],\r\n      nombreCiudad: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarCiudad();\r\n    this.cargarPaises();\r\n    this.cargarEstado();\r\n    this.cargarEstados();\r\n  }\r\n\r\n  cargarCiudad() {\r\n    this.ciudadService.getCiudad().subscribe(\r\n      data => {\r\n        this.ciudad = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar datos Personales:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  agregarCiudad() {\r\n    if (this.ciudadForm.valid) {\r\n      this.ciudadService.addCiudad(this.ciudadForm.value).subscribe(\r\n        () => {\r\n          this.cargarCiudad();\r\n          this.ciudadForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al agregar ciudad:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actualizarCiudad() {\r\n    if (this.ciudadForm.valid) {\r\n      this.ciudadService.updateCiudad(this.ciudadForm.value).subscribe(\r\n        () => {\r\n          this.cargarCiudad();\r\n          this.ciudadForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al actualizar Ciudades:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  eliminarCiudad(id: string | undefined) {\r\n    if (id) {\r\n      this.ciudadService.deleteCiudad(id).subscribe(\r\n        data => {\r\n          console.log('ciudad eliminado:', data);\r\n          this.cargarCiudad();\r\n        },\r\n        error => {\r\n          console.error('Error al eliminar ciudad:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  editarCiudad(ciudad: CiudadModel) {\r\n    this.ciudadForm.patchValue(ciudad);\r\n  }\r\n  cargarPaises() {\r\n    this.ciudadService.getPaises().subscribe(\r\n      data => {\r\n        this.paises = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Paises:', error);\r\n      }\r\n    );\r\n  }\r\n  cargarEstado() {\r\n    this.ciudadService.getEstados().subscribe(\r\n      data => {\r\n        this.estado = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Estados:', error);\r\n      }\r\n    );\r\n  }\r\n  filtrarEstadosPorPais(nombrePais: string) {\r\n    this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\r\n  }\r\n  cargarEstados() {\r\n\r\n    this.ciudadService.getEstados().subscribe(\r\n      data => {\r\n        this.allEstados = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Estados:', error);\r\n      }\r\n    );\r\n  }\r\n  onPaisSelected(event: any) {\r\n    const nombrePaisSeleccionado = event.target.value;\r\n    if (nombrePaisSeleccionado !== null) {\r\n      this.filtrarEstadosPorPais(nombrePaisSeleccionado);\r\n    }\r\n  }\r\n  \r\n}\r\n","\r\n<div class=\"container\">\r\n    <br>\r\n    <div class=\"row\">\r\n      <!-- Parte Izquierda - Formulario -->\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\" class=\"text-dart\">Agregar/Editar Paises</h5>\r\n\r\n            <form [formGroup]=\"ciudadForm\">\r\n              <div class=\"form-group\">\r\n                <label for=\"nombrePais\" class=\"text-dart\">Nombre Del país</label>\r\n                <select class=\"form-control\" id=\"nombrePais\" name=\"nombrePais\" formControlName=\"nombrePais\" (change)=\"onPaisSelected($event)\" required>\r\n                  <option value=\"\">Selecciona un país</option>\r\n                  <option *ngFor=\"let pais of paises\" [value]=\"pais.nombrePais\">{{ pais.nombrePais }}</option>\r\n                </select>\r\n              </div>\r\n              \r\n              \r\n              \r\n              <div class=\"form-group\">\r\n                <label for=\"nombreEstado\" class=\"text-dart\">Nombre Del Estado</label>\r\n                <select class=\"form-control\" id=\"nombreEstado\" name=\"nombreEstado\" formControlName=\"nombreEstado\" required>\r\n                  <option value=\"\">Selecciona un Estado</option>\r\n                  <option *ngFor=\"let estado of filteredEstados\" [value]=\"estado.nombreEstado\">{{ estado.nombreEstado }}</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div class=\"form-group\">\r\n                <label for=\"nombreCiudad\" class=\"text-dart\">Nombre De la Ciudad</label>\r\n                <input type=\"text\"  class=\"form-control\" id=\"nombreCiudad\" name=\"nombreCiudad\" formControlName=\"nombreCiudad\" required>\r\n              </div>\r\n             \r\n              <div class=\"btn-group mt-2\" >\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarCiudad()\">Agregar</button>\r\n                <button type=\"button\" class=\"btn btn-success ms-2\" (click)=\"actualizarCiudad()\">Actualizar</button>\r\n              </div>\r\n            </form>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Parte Derecha - Tabla -->\r\n      <div class=\"col-md-8\">\r\n        <table class=\"table table-striped table-hover\" >\r\n            <thead>\r\n              <tr class=\"table-primary\">\r\n                <th scope=\"col\">Nombre Del País</th>\r\n                <th scope=\"col\">Nombre Del Estado</th>\r\n                <th scope=\"col\">Nombre De la Ciudad</th>\r\n                <th scope=\"col\">Editar</th>\r\n                <th scope=\"col\">Eliminar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"datosP-table-body\">\r\n              <tr *ngFor=\"let ciudad of ciudad\">\r\n                <td>{{ ciudad.nombrePais }}</td>\r\n                <td>{{ ciudad.nombreEstado }}</td>\r\n                <td>{{ ciudad.nombreCiudad }}</td>\r\n                <td>\r\n                  <button class=\"btn btn-sm ms-2 btn-primary\" (click)=\"editarCiudad(ciudad)\"><i class=\"fa fa-edit\"></i></button>\r\n                  \r\n                </td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\" (click)=\"eliminarCiudad(ciudad._id)\"><i class=\"fa fa-trash\"></i></button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\" integrity=\"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\" crossorigin=\"anonymous\">"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}