{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms'; // Importa FormBuilder y Validators\nexport let DatosPComponent = class DatosPComponent {\n  constructor(DatosPService, fb) {\n    this.DatosPService = DatosPService;\n    this.fb = fb;\n    this.datosP = [];\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required],\n      cp: [0, Validators.required],\n      pais: ['', Validators.required],\n      estado: ['', Validators.required],\n      ciudad: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarDatosP();\n  }\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(data => {\n      this.datosP = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al agregar Datos Personales:', error);\n      });\n    }\n  }\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al actualizar Datos Personales:', error);\n      });\n    }\n  }\n  eliminarCiudad(id) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(data => {\n        console.log('Ciudad eliminada:', data);\n        this.cargarDatosP();\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n      });\n    }\n  }\n  editarDatosP(datosP) {\n    this.datosPForm.patchValue(datosP);\n  }\n};\nDatosPComponent = __decorate([Component({\n  selector: 'app-datos-p',\n  templateUrl: './datos-p.component.html',\n  styleUrls: ['./datos-p.component.css']\n})], DatosPComponent);","map":{"version":3,"names":["Component","Validators","DatosPComponent","constructor","DatosPService","fb","datosP","datosPForm","group","_id","telefono","required","dateNac","sexo","cp","pais","estado","ciudad","ngOnInit","cargarDatosP","getDatosP","subscribe","data","error","console","agregarDatosP","valid","addDatosP","value","reset","actualizarDatosP","updateDatosP","eliminarCiudad","id","deleteDatosP","log","editarDatosP","patchValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // Importa FormBuilder y Validators\nimport { DatosPModel } from 'src/app/models/datosPModel';\nimport { DatosPService } from 'src/app/services/datos-pservice.service';\nimport { ReactiveFormsModule } from '@angular/forms'; // Importa ReactiveFormsModule\n\n@Component({\n  selector: 'app-datos-p',\n  templateUrl: './datos-p.component.html',\n  styleUrls: ['./datos-p.component.css']\n})\nexport class DatosPComponent implements OnInit {\n  datosP: DatosPModel[] = [];\n  datosPForm: FormGroup;\n\n  constructor(private DatosPService: DatosPService, private fb: FormBuilder) {\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required], \n      cp: [0, Validators.required], \n      pais: ['', Validators.required], \n      estado: ['', Validators.required], \n      ciudad: ['', Validators.required] \n    });\n  }\n\n  ngOnInit() {\n    this.cargarDatosP();\n  }\n\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(\n      data => {\n        this.datosP = data;\n      },\n      error => {\n        console.error('Error al cargar datos Personales:', error);\n      }\n    );\n  }\n\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al agregar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al actualizar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  eliminarCiudad(id: string | undefined) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(\n        data => {\n          console.log('Ciudad eliminada:', data);\n          this.cargarDatosP();\n        },\n        error => {\n          console.error('Error al eliminar ciudad:', error);\n        }\n      );\n    }\n  }\n\n  editarDatosP(datosP: DatosPModel) {\n    this.datosPForm.patchValue(datosP);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}