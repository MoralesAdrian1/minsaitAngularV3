{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DatosPService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000/\";\n  }\n  getDatosP() {\n    this.http.get(`${this.domain}/api/datosP`).map();\n  }\n  addDatosP() {}\n  deleteDatosP() {}\n  updateDatosP() {}\n  static #_ = this.ɵfac = function DatosPService_Factory(t) {\n    return new (t || DatosPService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DatosPService,\n    factory: DatosPService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DatosPService","constructor","http","domain","getDatosP","get","map","addDatosP","deleteDatosP","updateDatosP","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\services\\datos-pservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { map } from 'rxjs/operators/'\n\nimport{DatosPModel} from'../models/datosPModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatosPService {\n\n  constructor(private http: HttpClient) { }\n  domain: string=\"http://localhost:3000/\";\n  getDatosP(){\n    this.http.get(`${this.domain}/api/datosP`)\n    .map()\n  }\n\n  addDatosP(){}\n  deleteDatosP(){}\n  updateDatosP(){}\n}\n"],"mappings":";;AASA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,wBAAwB;EADC;EAExCC,SAASA,CAAA;IACP,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CACzCG,GAAG,EAAE;EACR;EAEAC,SAASA,CAAA,GAAG;EACZC,YAAYA,CAAA,GAAG;EACfC,YAAYA,CAAA,GAAG;EAAC,QAAAC,CAAA,G;qBAXLV,aAAa,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbf,aAAa;IAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}