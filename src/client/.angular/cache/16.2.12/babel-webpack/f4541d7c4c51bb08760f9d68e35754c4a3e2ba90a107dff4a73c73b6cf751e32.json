{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DatosEstudiosService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getDatosEstudios() {\n    return this.http.get(`${this.domain}/api/datosEs`).pipe(\n    // Cambio en el tipo de retorno\n    map(res => res.map(item => this.parseDatosEsModel(item))) // Mapea cada elemento al tipo PerfilModel\n    );\n  }\n\n  addDatosEstudios(newDatosEs) {\n    return this.http.post(`${this.domain}/api/datosEs`, this.parseDatosEsData(newDatosEs)).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n\n  deleteDatosEstudios(id) {\n    return this.http.delete(`${this.domain}/api/datosEs/${id}`).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n\n  updateDatosEstudios(newDatosEs) {\n    return this.http.put(`${this.domain}/api/datosEs/${newDatosEs._id}`, this.parseDatosEsData(newDatosEs)).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n  // Método para convertir datos del PerfilModel a formato adecuado para enviar al servidor\n  parseDatosEsData(perfil) {\n    // Aquí puedes implementar la lógica necesaria para convertir el modelo al formato requerido por el servidor\n    return perfil;\n  }\n  // Método para convertir la respuesta del servidor al tipo PerfilModel\n  parseDatosEsModel(data) {\n    // Aquí puedes implementar la lógica necesaria para convertir la respuesta del servidor al tipo PerfilModel\n    return data;\n  }\n  static #_ = this.ɵfac = function DatosEstudiosService_Factory(t) {\n    return new (t || DatosEstudiosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DatosEstudiosService,\n    factory: DatosEstudiosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","DatosEstudiosService","constructor","http","domain","getDatosEstudios","get","pipe","res","item","parseDatosEsModel","addDatosEstudios","newDatosEs","post","parseDatosEsData","deleteDatosEstudios","id","delete","updateDatosEstudios","put","_id","perfil","data","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\services\\datos-estudios.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { DatosEstudioModel } from '../models/datosEstudioModel';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatosEstudiosService {\r\n  constructor(private http: HttpClient) { }\r\n  domain: string=\"http://localhost:3000\";\r\n  getDatosEstudios() {\r\n    return this.http.get<any[]>(`${this.domain}/api/datosEs`).pipe( // Cambio en el tipo de retorno\r\n      map(res => res.map(item => this.parseDatosEsModel(item))) // Mapea cada elemento al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  addDatosEstudios(newDatosEs: DatosEstudioModel){\r\n    return this.http.post<any>(`${this.domain}/api/datosEs`, this.parseDatosEsData(newDatosEs)).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  deleteDatosEstudios(id: string){\r\n    return this.http.delete<any>(`${this.domain}/api/datosEs/${id}`).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n  \r\n  updateDatosEstudios(newDatosEs: DatosEstudioModel) {\r\n    return this.http.put<any>(`${this.domain}/api/datosEs/${newDatosEs._id}`, this.parseDatosEsData(newDatosEs)).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parseDatosEsModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  // Método para convertir datos del PerfilModel a formato adecuado para enviar al servidor\r\n  private parseDatosEsData(perfil: DatosEstudioModel): any {\r\n    // Aquí puedes implementar la lógica necesaria para convertir el modelo al formato requerido por el servidor\r\n    return perfil;\r\n  }\r\n\r\n  // Método para convertir la respuesta del servidor al tipo PerfilModel\r\n  private parseDatosEsModel(data: any): DatosEstudioModel {\r\n    // Aquí puedes implementar la lógica necesaria para convertir la respuesta del servidor al tipo PerfilModel\r\n    return data as DatosEstudioModel;\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAO1B,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,cAAc,CAAC,CAACG,IAAI;IAAE;IAC9DP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAACR,GAAG,CAACS,IAAI,IAAI,IAAI,CAACC,iBAAiB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;KAC3D;EACH;;EAEAE,gBAAgBA,CAACC,UAA6B;IAC5C,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,GAAG,IAAI,CAACT,MAAM,cAAc,EAAE,IAAI,CAACU,gBAAgB,CAACF,UAAU,CAAC,CAAC,CAACL,IAAI;IAAE;IAChGP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,iBAAiB,CAACF,GAAG,CAAC,CAAC,CAAC;KACzC;EACH;;EAEAO,mBAAmBA,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACb,IAAI,CAACc,MAAM,CAAM,GAAG,IAAI,CAACb,MAAM,gBAAgBY,EAAE,EAAE,CAAC,CAACT,IAAI;IAAE;IACrEP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,iBAAiB,CAACF,GAAG,CAAC,CAAC,CAAC;KACzC;EACH;;EAEAU,mBAAmBA,CAACN,UAA6B;IAC/C,OAAO,IAAI,CAACT,IAAI,CAACgB,GAAG,CAAM,GAAG,IAAI,CAACf,MAAM,gBAAgBQ,UAAU,CAACQ,GAAG,EAAE,EAAE,IAAI,CAACN,gBAAgB,CAACF,UAAU,CAAC,CAAC,CAACL,IAAI;IAAE;IACjHP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,iBAAiB,CAACF,GAAG,CAAC,CAAC,CAAC;KACzC;EACH;EAEA;EACQM,gBAAgBA,CAACO,MAAyB;IAChD;IACA,OAAOA,MAAM;EACf;EAEA;EACQX,iBAAiBA,CAACY,IAAS;IACjC;IACA,OAAOA,IAAyB;EAClC;EAAC,QAAAC,CAAA,G;qBArCUtB,oBAAoB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB3B,oBAAoB;IAAA4B,OAAA,EAApB5B,oBAAoB,CAAA6B,IAAA;IAAAC,UAAA,EAFnB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}