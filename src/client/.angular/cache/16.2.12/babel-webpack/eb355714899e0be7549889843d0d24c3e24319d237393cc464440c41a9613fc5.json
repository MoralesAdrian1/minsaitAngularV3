{"ast":null,"code":"import { Validators } from '@angular/forms'; // Importa FormBuilder y Validators\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/datos-pservice.service\";\nimport * as i2 from \"src/app/services/estado.service\";\nimport * as i3 from \"src/app/services/ciudad.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction DatosPComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r4.nombrePais);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pais_r4.nombrePais);\n  }\n}\nfunction DatosPComponent_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estado_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", estado_r5.nombreEstado);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(estado_r5.nombreEstado);\n  }\n}\nfunction DatosPComponent_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ciudad_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ciudad_r6.nombreCiudad);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ciudad_r6.nombreCiudad);\n  }\n}\nfunction DatosPComponent_tr_97_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_97_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const datos_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editarDatosP(datos_r7));\n    });\n    i0.ɵɵelement(17, \"i\", 47);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"td\")(19, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_97_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const datos_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.eliminarDatosP(datos_r7._id));\n    });\n    i0.ɵɵelement(20, \"i\", 49);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const datos_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.dateNac);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.sexo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.cp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombrePais);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombreEstado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombreCiudad);\n  }\n}\nexport class DatosPComponent {\n  constructor(DatosPService, estadoService, ciudadService, fb) {\n    this.DatosPService = DatosPService;\n    this.estadoService = estadoService;\n    this.ciudadService = ciudadService;\n    this.fb = fb;\n    this.datosP = [];\n    this.paises = [];\n    this.ciudad = [];\n    this.estado = [];\n    this.datosPaises = [];\n    this.datosPFiltrados = [];\n    this.filtroEstado = '';\n    this.filtroCiudad = '';\n    this.filtroPais = '';\n    this.filtroSexo = '';\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required],\n      cp: [0, Validators.required],\n      nombrePais: ['', Validators.required],\n      nombreEstado: ['', Validators.required],\n      nombreCiudad: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarDatosP();\n  }\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(data => {\n      this.datosP = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al agregar Datos Personales:', error);\n      });\n    }\n  }\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al actualizar Datos Personales:', error);\n      });\n    }\n  }\n  eliminarDatosP(id) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(data => {\n        console.log('Ciudad eliminada:', data);\n        this.cargarDatosP();\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n      });\n    }\n  }\n  editarDatosP(datosP) {\n    this.datosPForm.patchValue(datosP);\n  }\n  filtrarDatos(event) {\n    const filtro = event.target.value;\n    this.DatosPService.getDatosP().subscribe(data => {\n      if (filtro === '') {\n        // Mostrar todos los datos si no se proporciona ningún filtro\n        this.datosP = data;\n      } else {\n        // Aplicar filtros según los criterios proporcionados\n        this.datosP = data.filter(item => (item.nombreEstado.toLowerCase().includes(this.filtroEstado.toLowerCase()) || this.filtroEstado === '') && (item.nombreCiudad.toLowerCase().includes(this.filtroCiudad.toLowerCase()) || this.filtroCiudad === '') && (item.nombrePais.toLowerCase().includes(filtro.toLowerCase()) || filtro === '') && (\n        // Utiliza el valor del input como filtro de país\n        item.sexo.toLowerCase().includes(this.filtroSexo.toLowerCase()) || this.filtroSexo === ''));\n      }\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  //filtrado\n  cargarPaises() {\n    this.DatosPService.getDatosP().subscribe(data => {\n      this.paises = data; // Cambia 'datosPaises' a 'paises'\n      console.log('Datos de países cargados:', this.paises); // Cambia 'datosPaises' a 'paises'\n    }, error => {\n      console.error('Error al cargar datos de países:', error);\n    });\n  }\n  filtrarEstadosPorPais(event) {\n    const nombrePais = event.target.value;\n    if (nombrePais) {\n      // Filtrar los estados según el país seleccionado\n      this.estadoService.getEstado().subscribe(data => {\n        this.estado = data.filter(estado => estado.nombrePais === nombrePais); // Cambia 'ciudad' a 'estado' y 'pais' a 'nombrePais'\n        // Cargar las ciudades correspondientes al país seleccionado\n        this.cargarCiudades(nombrePais);\n      }, error => {\n        console.error('Error al cargar estados por país:', error);\n      });\n    } else {\n      // Si no se selecciona ningún país, cargar todos los estados y todas las ciudades\n      this.cargarCiudades('');\n    }\n  }\n  filtrarEstadosPorCiudad(event) {\n    const nombreCiudad = event.target.value;\n    if (nombreCiudad) {\n      // Filtrar los estados según la ciudad seleccionada\n      this.estadoService.getEstado().subscribe(data => {\n        this.estado = data.filter(estado => estado.nombreEstado === nombreCiudad); // Cambia 'ciudad' a 'estado' y 'nombre' a 'nombreCiudad'\n        // Actualizar la lista de ciudades\n        this.ciudad = this.ciudad.filter(ciudad => ciudad.nombreCiudad === nombreCiudad); // Cambia 'ciudades' a 'ciudad' y 'nombre' a 'nombreCiudad'\n      }, error => {\n        console.error('Error al cargar estados por ciudad:', error);\n      });\n    } else {\n      // Si no se selecciona ninguna ciudad, cargar todos los estados\n      this.cargarEstados('');\n    }\n  }\n  cargarCiudades(paisSeleccionado) {\n    if (paisSeleccionado) {\n      // Obtener las ciudades del país seleccionado\n      this.ciudadService.getCiudadesPorPais(paisSeleccionado).subscribe(data => {\n        this.ciudad = data;\n        console.log('Ciudades cargadas para', paisSeleccionado + ':', this.ciudad);\n      }, error => {\n        console.error('Error al cargar ciudades:', error);\n      });\n    } else {\n      // Si no se selecciona ningún país, cargar todas las ciudades\n      this.ciudadService.getCiudad().subscribe(data => {\n        this.ciudad = data;\n        console.log('Todas las ciudades cargadas:', this.ciudad);\n      }, error => {\n        console.error('Error al cargar ciudades:', error);\n      });\n    }\n  }\n  cargarEstados(nombreCiudad) {\n    if (nombreCiudad) {\n      // Obtener los estados de la ciudad seleccionada\n      this.ciudadService.getEstadosPorCiudad(nombreCiudad).subscribe(data => {\n        this.estado = data;\n      }, error => {\n        console.error('Error al cargar estados por ciudad:', error);\n      });\n    } else {\n      // Si no se proporciona ninguna ciudad, cargar todos los estados\n      this.estadoService.getEstado().subscribe(data => {\n        this.estado = data;\n        console.log('Estados cargados:', this.estado);\n      }, error => {\n        console.error('Error al cargar estados:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function DatosPComponent_Factory(t) {\n    return new (t || DatosPComponent)(i0.ɵɵdirectiveInject(i1.DatosPService), i0.ɵɵdirectiveInject(i2.EstadoService), i0.ɵɵdirectiveInject(i3.CiudadService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatosPComponent,\n    selectors: [[\"app-datos-p\"]],\n    decls: 99,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"text-dart\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"telefono\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"telefono\", \"name\", \"telefono\", \"formControlName\", \"telefono\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateNac\", 1, \"text-dart\"], [\"type\", \"date\", \"id\", \"dateNac\", \"name\", \"dateNac\", \"formControlName\", \"dateNac\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"sexo\", 1, \"text-dart\"], [\"id\", \"sexo\", \"name\", \"sexo\", \"formControlName\", \"sexo\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"M\"], [\"value\", \"F\"], [\"value\", \"otro\"], [\"for\", \"cp\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"cp\", \"name\", \"cp\", \"formControlName\", \"cp\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"country-select\"], [\"id\", \"country-select\", \"formControlName\", \"pais\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"state-select\"], [\"id\", \"state-select\", \"formControlName\", \"Estado\", 1, \"form-control\", 3, \"change\"], [\"for\", \"city-select\"], [\"id\", \"city-select\", \"formControlName\", \"ciudad\", 1, \"form-control\", 3, \"change\"], [1, \"btn-group\", \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"col-md-8\"], [1, \"mb-3\"], [\"for\", \"filtro\", 1, \"form-label\"], [\"id\", \"filtro\", 1, \"form-select\", 3, \"change\"], [\"value\", \"estado\"], [\"value\", \"ciudad\"], [\"value\", \"pais\"], [\"value\", \"sexo\"], [1, \"table\"], [1, \"table-primary\"], [\"scope\", \"col\"], [\"id\", \"datosP-table-body\"], [4, \"ngFor\", \"ngForOf\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\", \"integrity\", \"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\", \"crossorigin\", \"anonymous\"], [3, \"value\"], [1, \"btn\", \"btn-sm\", \"ms-2\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ms-2\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]],\n    template: function DatosPComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Agregar/Editar Datos Personales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6)(9, \"fieldset\")(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Telefono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Ingresa tu Fecha de nacimiento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Ingresa tu sexo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 13)(22, \"option\", 14);\n        i0.ɵɵtext(23, \"Selecciona tu sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\", 15);\n        i0.ɵɵtext(25, \"Masculino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\", 16);\n        i0.ɵɵtext(27, \"Femenino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 17);\n        i0.ɵɵtext(29, \"Otro\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 7)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Ingresa tu Codigo Postal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 7)(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Selecciona un Pa\\u00EDs:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"select\", 21);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_37_listener($event) {\n          return ctx.filtrarEstadosPorPais($event);\n        });\n        i0.ɵɵelementStart(38, \"option\", 22);\n        i0.ɵɵtext(39, \"Elige un pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, DatosPComponent_option_40_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 7)(42, \"label\", 24);\n        i0.ɵɵtext(43, \"Selecciona un Estado:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"select\", 25);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_44_listener($event) {\n          return ctx.filtrarEstadosPorPais($event);\n        });\n        i0.ɵɵelementStart(45, \"option\", 22);\n        i0.ɵɵtext(46, \"Elige un estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(47, DatosPComponent_option_47_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 7)(49, \"label\", 26);\n        i0.ɵɵtext(50, \"Selecciona una Ciudad:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"select\", 27);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_51_listener($event) {\n          return ctx.filtrarEstadosPorCiudad($event);\n        });\n        i0.ɵɵelementStart(52, \"option\", 22);\n        i0.ɵɵtext(53, \"Elige una ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, DatosPComponent_option_54_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 28)(56, \"button\", 29);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_56_listener() {\n          return ctx.agregarDatosP();\n        });\n        i0.ɵɵtext(57, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_58_listener() {\n          return ctx.actualizarDatosP();\n        });\n        i0.ɵɵtext(59, \"Actualizar\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(60, \"div\", 31)(61, \"div\", 32)(62, \"label\", 33);\n        i0.ɵɵtext(63, \"Filtrar por:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"select\", 34);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_64_listener($event) {\n          return ctx.filtrarDatos($event);\n        });\n        i0.ɵɵelementStart(65, \"option\", 14);\n        i0.ɵɵtext(66, \"Seleccionar filtro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"option\", 35);\n        i0.ɵɵtext(68, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"option\", 36);\n        i0.ɵɵtext(70, \"Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"option\", 37);\n        i0.ɵɵtext(72, \"Pais\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"option\", 38);\n        i0.ɵɵtext(74, \"Sexo\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(75, \"table\", 39)(76, \"thead\")(77, \"tr\", 40)(78, \"th\", 41);\n        i0.ɵɵtext(79, \"Tel\\u00E9fono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"th\", 41);\n        i0.ɵɵtext(81, \"Fecha de Nacimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"th\", 41);\n        i0.ɵɵtext(83, \"Sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"th\", 41);\n        i0.ɵɵtext(85, \"C\\u00F3digo Postal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"th\", 41);\n        i0.ɵɵtext(87, \"Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"th\", 41);\n        i0.ɵɵtext(89, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"th\", 41);\n        i0.ɵɵtext(91, \"Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"th\", 41);\n        i0.ɵɵtext(93, \"Editar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"th\", 41);\n        i0.ɵɵtext(95, \"Eliminar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(96, \"tbody\", 42);\n        i0.ɵɵtemplate(97, DatosPComponent_tr_97_Template, 21, 7, \"tr\", 43);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(98, \"link\", 44);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.datosPForm);\n        i0.ɵɵadvance(32);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosPaises);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.estado);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ciudad);\n        i0.ɵɵadvance(43);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosP);\n      }\n    },\n    dependencies: [i5.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","pais_r4","nombrePais","ɵɵadvance","ɵɵtextInterpolate","estado_r5","nombreEstado","ciudad_r6","nombreCiudad","ɵɵlistener","DatosPComponent_tr_97_Template_button_click_16_listener","restoredCtx","ɵɵrestoreView","_r9","datos_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","editarDatosP","ɵɵelement","DatosPComponent_tr_97_Template_button_click_19_listener","ctx_r10","eliminarDatosP","_id","telefono","dateNac","sexo","cp","DatosPComponent","constructor","DatosPService","estadoService","ciudadService","fb","datosP","paises","ciudad","estado","datosPaises","datosPFiltrados","filtroEstado","filtroCiudad","filtroPais","filtroSexo","datosPForm","group","required","ngOnInit","cargarDatosP","getDatosP","subscribe","data","error","console","agregarDatosP","valid","addDatosP","value","reset","actualizarDatosP","updateDatosP","id","deleteDatosP","log","patchValue","filtrarDatos","event","filtro","target","filter","item","toLowerCase","includes","cargarPaises","filtrarEstadosPorPais","getEstado","cargarCiudades","filtrarEstadosPorCiudad","cargarEstados","paisSeleccionado","getCiudadesPorPais","getCiudad","getEstadosPorCiudad","_","ɵɵdirectiveInject","i1","i2","EstadoService","i3","CiudadService","i4","FormBuilder","_2","selectors","decls","vars","consts","template","DatosPComponent_Template","rf","ctx","DatosPComponent_Template_select_change_37_listener","$event","ɵɵtemplate","DatosPComponent_option_40_Template","DatosPComponent_Template_select_change_44_listener","DatosPComponent_option_47_Template","DatosPComponent_Template_select_change_51_listener","DatosPComponent_option_54_Template","DatosPComponent_Template_button_click_56_listener","DatosPComponent_Template_button_click_58_listener","DatosPComponent_Template_select_change_64_listener","DatosPComponent_tr_97_Template"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // Importa FormBuilder y Validators\n\n\nimport { ReactiveFormsModule } from '@angular/forms'; // Importa ReactiveFormsModule\n//servicios\nimport { DatosPService } from 'src/app/services/datos-pservice.service';\n//modelos\nimport { DatosPModel } from 'src/app/models/datosPModel';\nimport { paisModel } from 'src/app/models/paisModel';\nimport { CiudadModel } from 'src/app/models/ciudadModel';\nimport { EstadoModel } from 'src/app/models/estadoModel';\nimport { EstadoService } from 'src/app/services/estado.service';\nimport { CiudadService } from 'src/app/services/ciudad.service';\n\n@Component({\n  selector: 'app-datos-p',\n  templateUrl: './datos-p.component.html',\n  styleUrls: ['./datos-p.component.css']\n})\nexport class DatosPComponent implements OnInit {\n  datosP: DatosPModel[] = [];\n  paises: paisModel[] = [];\n  ciudad: CiudadModel[]=[];\n  estado: EstadoModel[]=[];\n\n  datosPaises: DatosPModel[] = [];\n\n  datosPFiltrados: DatosPModel[] = []; \n  datosPForm: FormGroup;\n  filtroEstado: string = '';\n  filtroCiudad: string = '';\n  filtroPais: string = '';\n  filtroSexo: string = '';\n\n\n  constructor(private DatosPService: DatosPService, \n              private estadoService: EstadoService,\n              private ciudadService: CiudadService,\n    private fb: FormBuilder) {\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required], \n      cp: [0, Validators.required], \n      nombrePais: ['', Validators.required], \n      nombreEstado: ['', Validators.required], \n      nombreCiudad: ['', Validators.required] \n    });\n  }\n\n  ngOnInit() {\n    this.cargarDatosP();\n  }\n\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(\n      data => {\n        this.datosP = data;\n      },\n      error => {\n        console.error('Error al cargar datos Personales:', error);\n      }\n    );\n  }\n\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al agregar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al actualizar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  eliminarDatosP(id: string | undefined) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(\n        data => {\n          console.log('Ciudad eliminada:', data);\n          this.cargarDatosP();\n        },\n        error => {\n          console.error('Error al eliminar ciudad:', error);\n        }\n      );\n    }\n  }\n\n  editarDatosP(datosP: DatosPModel) {\n    this.datosPForm.patchValue(datosP);\n  }\n  filtrarDatos(event: any) {\n    const filtro = event.target.value;\n    this.DatosPService.getDatosP().subscribe(\n      data => {\n        if (filtro === '') {\n          // Mostrar todos los datos si no se proporciona ningún filtro\n          this.datosP = data;\n        } else {\n          // Aplicar filtros según los criterios proporcionados\n          this.datosP = data.filter(item =>\n            (item.nombreEstado.toLowerCase().includes(this.filtroEstado.toLowerCase()) || this.filtroEstado === '') &&\n            (item.nombreCiudad.toLowerCase().includes(this.filtroCiudad.toLowerCase()) || this.filtroCiudad === '') &&\n            (item.nombrePais.toLowerCase().includes(filtro.toLowerCase()) || filtro === '') && // Utiliza el valor del input como filtro de país\n            (item.sexo.toLowerCase().includes(this.filtroSexo.toLowerCase()) || this.filtroSexo === '')\n          );\n        }\n      },\n      error => {\n        console.error('Error al cargar datos Personales:', error);\n      }\n    );\n  }\n  //filtrado\n  cargarPaises(): void {\n    this.DatosPService.getDatosP().subscribe(\n      data => {\n        this.paises = data; // Cambia 'datosPaises' a 'paises'\n        console.log('Datos de países cargados:', this.paises); // Cambia 'datosPaises' a 'paises'\n      },\n      error => {\n        console.error('Error al cargar datos de países:', error);\n      }\n    );\n  }\n  \n  filtrarEstadosPorPais(event: any) {\n    const nombrePais = event.target.value;\n    if (nombrePais) {\n      // Filtrar los estados según el país seleccionado\n      this.estadoService.getEstado().subscribe(\n        data => {\n          this.estado = data.filter(estado => estado.nombrePais === nombrePais); // Cambia 'ciudad' a 'estado' y 'pais' a 'nombrePais'\n          // Cargar las ciudades correspondientes al país seleccionado\n          this.cargarCiudades(nombrePais);\n        },\n        error => {\n          console.error('Error al cargar estados por país:', error);\n        }\n      );\n    } else {\n      // Si no se selecciona ningún país, cargar todos los estados y todas las ciudades\n      this.cargarCiudades('');\n    }\n  }\n  \n  filtrarEstadosPorCiudad(event: any) {\n    const nombreCiudad = event.target.value;\n    if (nombreCiudad) {\n      // Filtrar los estados según la ciudad seleccionada\n      this.estadoService.getEstado().subscribe(\n        data => {\n          this.estado = data.filter(estado => estado.nombreEstado === nombreCiudad); // Cambia 'ciudad' a 'estado' y 'nombre' a 'nombreCiudad'\n          // Actualizar la lista de ciudades\n          this.ciudad = this.ciudad.filter(ciudad => ciudad.nombreCiudad === nombreCiudad); // Cambia 'ciudades' a 'ciudad' y 'nombre' a 'nombreCiudad'\n        },\n        error => {\n          console.error('Error al cargar estados por ciudad:', error);\n        }\n      );\n    } else {\n      // Si no se selecciona ninguna ciudad, cargar todos los estados\n      this.cargarEstados('');\n    }\n  }\n  \n  cargarCiudades(paisSeleccionado: string) {\n    if (paisSeleccionado) {\n      // Obtener las ciudades del país seleccionado\n      this.ciudadService.getCiudadesPorPais(paisSeleccionado).subscribe(\n        data => {\n          this.ciudad = data;\n          console.log('Ciudades cargadas para', paisSeleccionado + ':', this.ciudad);\n        },\n        error => {\n          console.error('Error al cargar ciudades:', error);\n        }\n      );\n    } else {\n      // Si no se selecciona ningún país, cargar todas las ciudades\n      this.ciudadService.getCiudad().subscribe(\n        data => {\n          this.ciudad = data;\n          console.log('Todas las ciudades cargadas:', this.ciudad);\n        },\n        error => {\n          console.error('Error al cargar ciudades:', error);\n        }\n      );\n    }\n  }\n  \n  cargarEstados(nombreCiudad: string) {\n    if (nombreCiudad) {\n      // Obtener los estados de la ciudad seleccionada\n      this.ciudadService.getEstadosPorCiudad(nombreCiudad).subscribe(\n        data => {\n          this.estado = data;\n        },\n        error => {\n          console.error('Error al cargar estados por ciudad:', error);\n        }\n      );\n    } else {\n      // Si no se proporciona ninguna ciudad, cargar todos los estados\n      this.estadoService.getEstado().subscribe(\n        data => {\n          this.estado = data;\n          console.log('Estados cargados:', this.estado);\n        },\n        error => {\n          console.error('Error al cargar estados:', error);\n        }\n      );\n    }\n  }\n\n  \n\n}","<div class=\"container\">\n  <br>\n  <div class=\"row\">\n    <!-- Parte Izquierda - Formulario -->\n    <div class=\"col-md-4\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\" class=\"text-dart\">Agregar/Editar Datos Personales</h5>\n\n          <form [formGroup]=\"datosPForm\">\n              <fieldset>\n            <div class=\"form-group\">\n              <label for=\"telefono\" class=\"text-dart\">Telefono</label>\n              <input type=\"text\" class=\"form-control\" id=\"telefono\" name=\"telefono\" formControlName=\"telefono\" required>\n            </div>\n           </fieldset>\n           <div class=\"form-group\">\n              <label for=\"dateNac\" class=\"text-dart\">Ingresa tu Fecha de nacimiento:</label>\n              <input type=\"date\" class=\"form-control\" id=\"dateNac\" name=\"dateNac\" formControlName=\"dateNac\" required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"sexo\" class=\"text-dart\">Ingresa tu sexo:</label>\n              <select class=\"form-control\" id=\"sexo\" name=\"sexo\" formControlName=\"sexo\" required>\n                <option value=\"\">Selecciona tu sexo</option>\n                <option value=\"M\">Masculino</option>\n                <option value=\"F\">Femenino</option>\n                <option value=\"otro\">Otro</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"cp\" class=\"text-dart\">Ingresa tu Codigo Postal:</label>\n              <input type=\"text\" class=\"form-control\" id=\"cp\" name=\"cp\" formControlName=\"cp\" required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"country-select\">Selecciona un País:</label>\n              <select class=\"form-control\" id=\"country-select\" formControlName=\"pais\"\n                  (change)=\"filtrarEstadosPorPais($event)\">\n                  <option value=\"\" disabled selected>Elige un país</option>\n                  <option *ngFor=\"let pais of datosPaises\" [value]=\"pais.nombrePais\">{{ pais.nombrePais }}</option>\n              </select>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"state-select\">Selecciona un Estado:</label>\n            <select class=\"form-control\" id=\"state-select\" formControlName=\"Estado\" (change)=\"filtrarEstadosPorPais($event)\">\n              <option value=\"\" disabled selected>Elige un estado</option>\n              <option *ngFor=\"let estado of estado\" [value]=\"estado.nombreEstado\">{{ estado.nombreEstado }}</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"city-select\">Selecciona una Ciudad:</label>\n            <select class=\"form-control\" id=\"city-select\" formControlName=\"ciudad\" (change)=\"filtrarEstadosPorCiudad($event)\">\n              <option value=\"\" disabled selected>Elige una ciudad</option>\n              <option *ngFor=\"let ciudad of ciudad\" [value]=\"ciudad.nombreCiudad\">{{ ciudad.nombreCiudad }}</option>\n            </select>\n          </div>\n            <div class=\"btn-group mt-2\" >\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarDatosP()\">Agregar</button>\n              <button type=\"button\" class=\"btn btn-success ms-2\" (click)=\"actualizarDatosP()\">Actualizar</button>\n            </div>\n          </form>\n          \n        </div>\n      </div>\n    </div>\n\n    <!-- Parte Derecha - Tabla -->\n    <div class=\"col-md-8\">\n      <div class=\"mb-3\">\n        <label for=\"filtro\" class=\"form-label\">Filtrar por:</label>\n        <select class=\"form-select\" id=\"filtro\" (change)=\"filtrarDatos($event)\">\n          <option value=\"\">Seleccionar filtro</option>\n          <option value=\"estado\">Estado</option>\n          <option value=\"ciudad\">Ciudad</option>\n          <option value=\"pais\">Pais</option>\n          <option value=\"sexo\">Sexo</option>\n        </select>\n      </div>\n      <table class=\"table\">\n        <thead>\n          <tr class=\"table-primary\">\n            <th scope=\"col\">Teléfono</th>\n            <th scope=\"col\">Fecha de Nacimiento</th>\n            <th scope=\"col\">Sexo</th>\n            <th scope=\"col\">Código Postal</th>\n            <th scope=\"col\">País</th>\n            <th scope=\"col\">Estado</th>\n            <th scope=\"col\">Ciudad</th>\n            <th scope=\"col\">Editar</th>\n            <th scope=\"col\">Eliminar</th>\n          </tr>\n        </thead>\n        <tbody id=\"datosP-table-body\">\n          <tr *ngFor=\"let datos of datosP\">\n            <td>{{ datos.telefono }}</td>\n            <td>{{ datos.dateNac }}</td>\n            <td>{{ datos.sexo }}</td>\n            <td>{{ datos.cp }}</td>\n            <td>{{ datos.nombrePais }}</td>\n            <td>{{ datos.nombreEstado }}</td>\n            <td>{{ datos.nombreCiudad }}</td>\n            <td>\n              <button class=\"btn btn-sm ms-2 btn-primary\" (click)=\"editarDatosP(datos)\"><i class=\"fa fa-edit\"></i></button>\n            </td>\n            <td>\n              <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\" (click)=\"eliminarDatosP(datos._id)\"><i class=\"fa fa-trash\"></i></button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\" integrity=\"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\" crossorigin=\"anonymous\">"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB,CAAC,CAAC;;;;;;;;;ICqCnDC,EAAA,CAAAC,cAAA,iBAAmE;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAxDH,EAAA,CAAAI,UAAA,UAAAC,OAAA,CAAAC,UAAA,CAAyB;IAACN,EAAA,CAAAO,SAAA,GAAqB;IAArBP,EAAA,CAAAQ,iBAAA,CAAAH,OAAA,CAAAC,UAAA,CAAqB;;;;;IAO5FN,EAAA,CAAAC,cAAA,iBAAoE;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAhEH,EAAA,CAAAI,UAAA,UAAAK,SAAA,CAAAC,YAAA,CAA6B;IAACV,EAAA,CAAAO,SAAA,GAAyB;IAAzBP,EAAA,CAAAQ,iBAAA,CAAAC,SAAA,CAAAC,YAAA,CAAyB;;;;;IAO7FV,EAAA,CAAAC,cAAA,iBAAoE;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAhEH,EAAA,CAAAI,UAAA,UAAAO,SAAA,CAAAC,YAAA,CAA6B;IAACZ,EAAA,CAAAO,SAAA,GAAyB;IAAzBP,EAAA,CAAAQ,iBAAA,CAAAG,SAAA,CAAAC,YAAA,CAAyB;;;;;;IAwCjGZ,EAAA,CAAAC,cAAA,SAAiC;IAC3BD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,IAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,UAAI;IAC0CD,EAAA,CAAAa,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAf,EAAA,CAAAgB,aAAA,CAAAC,GAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAApB,EAAA,CAAAqB,aAAA;MAAA,OAASrB,EAAA,CAAAsB,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,QAAA,CAAmB;IAAA,EAAC;IAAClB,EAAA,CAAAwB,SAAA,aAA0B;IAAAxB,EAAA,CAAAG,YAAA,EAAS;IAE/GH,EAAA,CAAAC,cAAA,UAAI;IACuDD,EAAA,CAAAa,UAAA,mBAAAY,wDAAA;MAAA,MAAAV,WAAA,GAAAf,EAAA,CAAAgB,aAAA,CAAAC,GAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAO,OAAA,GAAA1B,EAAA,CAAAqB,aAAA;MAAA,OAASrB,EAAA,CAAAsB,WAAA,CAAAI,OAAA,CAAAC,cAAA,CAAAT,QAAA,CAAAU,GAAA,CAAyB;IAAA,EAAC;IAAC5B,EAAA,CAAAwB,SAAA,aAA2B;IAAAxB,EAAA,CAAAG,YAAA,EAAS;;;;IAX/HH,EAAA,CAAAO,SAAA,GAAoB;IAApBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAW,QAAA,CAAoB;IACpB7B,EAAA,CAAAO,SAAA,GAAmB;IAAnBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAY,OAAA,CAAmB;IACnB9B,EAAA,CAAAO,SAAA,GAAgB;IAAhBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAa,IAAA,CAAgB;IAChB/B,EAAA,CAAAO,SAAA,GAAc;IAAdP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAc,EAAA,CAAc;IACdhC,EAAA,CAAAO,SAAA,GAAsB;IAAtBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAZ,UAAA,CAAsB;IACtBN,EAAA,CAAAO,SAAA,GAAwB;IAAxBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAR,YAAA,CAAwB;IACxBV,EAAA,CAAAO,SAAA,GAAwB;IAAxBP,EAAA,CAAAQ,iBAAA,CAAAU,QAAA,CAAAN,YAAA,CAAwB;;;AD/ExC,OAAM,MAAOqB,eAAe;EAgB1BC,YAAoBC,aAA4B,EAC5BC,aAA4B,EAC5BC,aAA4B,EACtCC,EAAe;IAHL,KAAAH,aAAa,GAAbA,aAAa;IACb,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,aAAa,GAAbA,aAAa;IACvB,KAAAC,EAAE,GAAFA,EAAE;IAlBZ,KAAAC,MAAM,GAAkB,EAAE;IAC1B,KAAAC,MAAM,GAAgB,EAAE;IACxB,KAAAC,MAAM,GAAgB,EAAE;IACxB,KAAAC,MAAM,GAAgB,EAAE;IAExB,KAAAC,WAAW,GAAkB,EAAE;IAE/B,KAAAC,eAAe,GAAkB,EAAE;IAEnC,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,UAAU,GAAW,EAAE;IAOrB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC;MAC9BtB,GAAG,EAAE,CAAC,EAAE,CAAC;MACTC,QAAQ,EAAE,CAAC,CAAC,EAAE9B,UAAU,CAACoD,QAAQ,CAAC;MAClCrB,OAAO,EAAE,CAAC,CAAC,EAAE/B,UAAU,CAACoD,QAAQ,CAAC;MACjCpB,IAAI,EAAE,CAAC,EAAE,EAAEhC,UAAU,CAACoD,QAAQ,CAAC;MAC/BnB,EAAE,EAAE,CAAC,CAAC,EAAEjC,UAAU,CAACoD,QAAQ,CAAC;MAC5B7C,UAAU,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACoD,QAAQ,CAAC;MACrCzC,YAAY,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACoD,QAAQ,CAAC;MACvCvC,YAAY,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACoD,QAAQ;KACvC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAAClB,aAAa,CAACmB,SAAS,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAG;MACL,IAAI,CAACjB,MAAM,GAAGiB,IAAI;IACpB,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CACF;EACH;EAEAE,aAAaA,CAAA;IACX,IAAI,IAAI,CAACV,UAAU,CAACW,KAAK,EAAE;MACzB,IAAI,CAACzB,aAAa,CAAC0B,SAAS,CAAC,IAAI,CAACZ,UAAU,CAACa,KAAK,CAAC,CAACP,SAAS,CAC3D,MAAK;QACH,IAAI,CAACF,YAAY,EAAE;QACnB,IAAI,CAACJ,UAAU,CAACc,KAAK,EAAE;MACzB,CAAC,EACDN,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,CACF;;EAEL;EAEAO,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACf,UAAU,CAACW,KAAK,EAAE;MACzB,IAAI,CAACzB,aAAa,CAAC8B,YAAY,CAAC,IAAI,CAAChB,UAAU,CAACa,KAAK,CAAC,CAACP,SAAS,CAC9D,MAAK;QACH,IAAI,CAACF,YAAY,EAAE;QACnB,IAAI,CAACJ,UAAU,CAACc,KAAK,EAAE;MACzB,CAAC,EACDN,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CACF;;EAEL;EAEA9B,cAAcA,CAACuC,EAAsB;IACnC,IAAIA,EAAE,EAAE;MACN,IAAI,CAAC/B,aAAa,CAACgC,YAAY,CAACD,EAAE,CAAC,CAACX,SAAS,CAC3CC,IAAI,IAAG;QACLE,OAAO,CAACU,GAAG,CAAC,mBAAmB,EAAEZ,IAAI,CAAC;QACtC,IAAI,CAACH,YAAY,EAAE;MACrB,CAAC,EACDI,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;;EAEL;EAEAlC,YAAYA,CAACgB,MAAmB;IAC9B,IAAI,CAACU,UAAU,CAACoB,UAAU,CAAC9B,MAAM,CAAC;EACpC;EACA+B,YAAYA,CAACC,KAAU;IACrB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACX,KAAK;IACjC,IAAI,CAAC3B,aAAa,CAACmB,SAAS,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAG;MACL,IAAIgB,MAAM,KAAK,EAAE,EAAE;QACjB;QACA,IAAI,CAACjC,MAAM,GAAGiB,IAAI;OACnB,MAAM;QACL;QACA,IAAI,CAACjB,MAAM,GAAGiB,IAAI,CAACkB,MAAM,CAACC,IAAI,IAC5B,CAACA,IAAI,CAACjE,YAAY,CAACkE,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAChC,YAAY,CAAC+B,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC/B,YAAY,KAAK,EAAE,MACrG8B,IAAI,CAAC/D,YAAY,CAACgE,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC/B,YAAY,CAAC8B,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC9B,YAAY,KAAK,EAAE,CAAC,KACtG6B,IAAI,CAACrE,UAAU,CAACsE,WAAW,EAAE,CAACC,QAAQ,CAACL,MAAM,CAACI,WAAW,EAAE,CAAC,IAAIJ,MAAM,KAAK,EAAE,CAAC;QAAI;QAClFG,IAAI,CAAC5C,IAAI,CAAC6C,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC7B,UAAU,CAAC4B,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC5B,UAAU,KAAK,EAAE,CAAC,CAC5F;;IAEL,CAAC,EACDS,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CACF;EACH;EACA;EACAqB,YAAYA,CAAA;IACV,IAAI,CAAC3C,aAAa,CAACmB,SAAS,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAG;MACL,IAAI,CAAChB,MAAM,GAAGgB,IAAI,CAAC,CAAC;MACpBE,OAAO,CAACU,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC5B,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC,EACDiB,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CACF;EACH;EAEAsB,qBAAqBA,CAACR,KAAU;IAC9B,MAAMjE,UAAU,GAAGiE,KAAK,CAACE,MAAM,CAACX,KAAK;IACrC,IAAIxD,UAAU,EAAE;MACd;MACA,IAAI,CAAC8B,aAAa,CAAC4C,SAAS,EAAE,CAACzB,SAAS,CACtCC,IAAI,IAAG;QACL,IAAI,CAACd,MAAM,GAAGc,IAAI,CAACkB,MAAM,CAAChC,MAAM,IAAIA,MAAM,CAACpC,UAAU,KAAKA,UAAU,CAAC,CAAC,CAAC;QACvE;QACA,IAAI,CAAC2E,cAAc,CAAC3E,UAAU,CAAC;MACjC,CAAC,EACDmD,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CACF;KACF,MAAM;MACL;MACA,IAAI,CAACwB,cAAc,CAAC,EAAE,CAAC;;EAE3B;EAEAC,uBAAuBA,CAACX,KAAU;IAChC,MAAM3D,YAAY,GAAG2D,KAAK,CAACE,MAAM,CAACX,KAAK;IACvC,IAAIlD,YAAY,EAAE;MAChB;MACA,IAAI,CAACwB,aAAa,CAAC4C,SAAS,EAAE,CAACzB,SAAS,CACtCC,IAAI,IAAG;QACL,IAAI,CAACd,MAAM,GAAGc,IAAI,CAACkB,MAAM,CAAChC,MAAM,IAAIA,MAAM,CAAChC,YAAY,KAAKE,YAAY,CAAC,CAAC,CAAC;QAC3E;QACA,IAAI,CAAC6B,MAAM,GAAG,IAAI,CAACA,MAAM,CAACiC,MAAM,CAACjC,MAAM,IAAIA,MAAM,CAAC7B,YAAY,KAAKA,YAAY,CAAC,CAAC,CAAC;MACpF,CAAC,EACD6C,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CACF;KACF,MAAM;MACL;MACA,IAAI,CAAC0B,aAAa,CAAC,EAAE,CAAC;;EAE1B;EAEAF,cAAcA,CAACG,gBAAwB;IACrC,IAAIA,gBAAgB,EAAE;MACpB;MACA,IAAI,CAAC/C,aAAa,CAACgD,kBAAkB,CAACD,gBAAgB,CAAC,CAAC7B,SAAS,CAC/DC,IAAI,IAAG;QACL,IAAI,CAACf,MAAM,GAAGe,IAAI;QAClBE,OAAO,CAACU,GAAG,CAAC,wBAAwB,EAAEgB,gBAAgB,GAAG,GAAG,EAAE,IAAI,CAAC3C,MAAM,CAAC;MAC5E,CAAC,EACDgB,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;KACF,MAAM;MACL;MACA,IAAI,CAACpB,aAAa,CAACiD,SAAS,EAAE,CAAC/B,SAAS,CACtCC,IAAI,IAAG;QACL,IAAI,CAACf,MAAM,GAAGe,IAAI;QAClBE,OAAO,CAACU,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC3B,MAAM,CAAC;MAC1D,CAAC,EACDgB,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;;EAEL;EAEA0B,aAAaA,CAACvE,YAAoB;IAChC,IAAIA,YAAY,EAAE;MAChB;MACA,IAAI,CAACyB,aAAa,CAACkD,mBAAmB,CAAC3E,YAAY,CAAC,CAAC2C,SAAS,CAC5DC,IAAI,IAAG;QACL,IAAI,CAACd,MAAM,GAAGc,IAAI;MACpB,CAAC,EACDC,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CACF;KACF,MAAM;MACL;MACA,IAAI,CAACrB,aAAa,CAAC4C,SAAS,EAAE,CAACzB,SAAS,CACtCC,IAAI,IAAG;QACL,IAAI,CAACd,MAAM,GAAGc,IAAI;QAClBE,OAAO,CAACU,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC1B,MAAM,CAAC;MAC/C,CAAC,EACDe,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CACF;;EAEL;EAAC,QAAA+B,CAAA,G;qBAxNUvD,eAAe,EAAAjC,EAAA,CAAAyF,iBAAA,CAAAC,EAAA,CAAAvD,aAAA,GAAAnC,EAAA,CAAAyF,iBAAA,CAAAE,EAAA,CAAAC,aAAA,GAAA5F,EAAA,CAAAyF,iBAAA,CAAAI,EAAA,CAAAC,aAAA,GAAA9F,EAAA,CAAAyF,iBAAA,CAAAM,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfhE,eAAe;IAAAiE,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCpB5BxG,EAAA,CAAAC,cAAA,aAAuB;QACrBD,EAAA,CAAAwB,SAAA,SAAI;QACJxB,EAAA,CAAAC,cAAA,aAAiB;QAKgCD,EAAA,CAAAE,MAAA,sCAA+B;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAE7EH,EAAA,CAAAC,cAAA,cAA+B;QAGaD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxDH,EAAA,CAAAwB,SAAA,gBAA0G;QAC5GxB,EAAA,CAAAG,YAAA,EAAM;QAEPH,EAAA,CAAAC,cAAA,cAAwB;QACkBD,EAAA,CAAAE,MAAA,uCAA+B;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC9EH,EAAA,CAAAwB,SAAA,iBAAuG;QACzGxB,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,cAAwB;QACcD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAC,cAAA,kBAAmF;QAChED,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5CH,EAAA,CAAAC,cAAA,kBAAkB;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACpCH,EAAA,CAAAC,cAAA,kBAAkB;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACnCH,EAAA,CAAAC,cAAA,kBAAqB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAGtCH,EAAA,CAAAC,cAAA,cAAwB;QACYD,EAAA,CAAAE,MAAA,iCAAyB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACnEH,EAAA,CAAAwB,SAAA,iBAAwF;QAC1FxB,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,cAAwB;QACMD,EAAA,CAAAE,MAAA,gCAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvDH,EAAA,CAAAC,cAAA,kBAC6C;QAAzCD,EAAA,CAAAa,UAAA,oBAAA6F,mDAAAC,MAAA;UAAA,OAAUF,GAAA,CAAA1B,qBAAA,CAAA4B,MAAA,CAA6B;QAAA,EAAC;QACxC3G,EAAA,CAAAC,cAAA,kBAAmC;QAAAD,EAAA,CAAAE,MAAA,0BAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzDH,EAAA,CAAA4G,UAAA,KAAAC,kCAAA,qBAAiG;QACrG7G,EAAA,CAAAG,YAAA,EAAS;QAEbH,EAAA,CAAAC,cAAA,cAAwB;QACID,EAAA,CAAAE,MAAA,6BAAqB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvDH,EAAA,CAAAC,cAAA,kBAAiH;QAAzCD,EAAA,CAAAa,UAAA,oBAAAiG,mDAAAH,MAAA;UAAA,OAAUF,GAAA,CAAA1B,qBAAA,CAAA4B,MAAA,CAA6B;QAAA,EAAC;QAC9G3G,EAAA,CAAAC,cAAA,kBAAmC;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3DH,EAAA,CAAA4G,UAAA,KAAAG,kCAAA,qBAAsG;QACxG/G,EAAA,CAAAG,YAAA,EAAS;QAEXH,EAAA,CAAAC,cAAA,cAAwB;QACGD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvDH,EAAA,CAAAC,cAAA,kBAAkH;QAA3CD,EAAA,CAAAa,UAAA,oBAAAmG,mDAAAL,MAAA;UAAA,OAAUF,GAAA,CAAAvB,uBAAA,CAAAyB,MAAA,CAA+B;QAAA,EAAC;QAC/G3G,EAAA,CAAAC,cAAA,kBAAmC;QAAAD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5DH,EAAA,CAAA4G,UAAA,KAAAK,kCAAA,qBAAsG;QACxGjH,EAAA,CAAAG,YAAA,EAAS;QAETH,EAAA,CAAAC,cAAA,eAA6B;QACmBD,EAAA,CAAAa,UAAA,mBAAAqG,kDAAA;UAAA,OAAST,GAAA,CAAA9C,aAAA,EAAe;QAAA,EAAC;QAAC3D,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxFH,EAAA,CAAAC,cAAA,kBAAgF;QAA7BD,EAAA,CAAAa,UAAA,mBAAAsG,kDAAA;UAAA,OAASV,GAAA,CAAAzC,gBAAA,EAAkB;QAAA,EAAC;QAAChE,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAS7GH,EAAA,CAAAC,cAAA,eAAsB;QAEqBD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3DH,EAAA,CAAAC,cAAA,kBAAwE;QAAhCD,EAAA,CAAAa,UAAA,oBAAAuG,mDAAAT,MAAA;UAAA,OAAUF,GAAA,CAAAnC,YAAA,CAAAqC,MAAA,CAAoB;QAAA,EAAC;QACrE3G,EAAA,CAAAC,cAAA,kBAAiB;QAAAD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5CH,EAAA,CAAAC,cAAA,kBAAuB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtCH,EAAA,CAAAC,cAAA,kBAAuB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtCH,EAAA,CAAAC,cAAA,kBAAqB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAClCH,EAAA,CAAAC,cAAA,kBAAqB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAGtCH,EAAA,CAAAC,cAAA,iBAAqB;QAGCD,EAAA,CAAAE,MAAA,qBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC7BH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,2BAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxCH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACzBH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,0BAAa;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClCH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,iBAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACzBH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3BH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3BH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3BH,EAAA,CAAAC,cAAA,cAAgB;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGjCH,EAAA,CAAAC,cAAA,iBAA8B;QAC5BD,EAAA,CAAA4G,UAAA,KAAAS,8BAAA,kBAcK;QACPrH,EAAA,CAAAG,YAAA,EAAQ;QAQdH,EAAA,CAAAwB,SAAA,gBAAsN;;;QA1GxMxB,EAAA,CAAAO,SAAA,GAAwB;QAAxBP,EAAA,CAAAI,UAAA,cAAAqG,GAAA,CAAAxD,UAAA,CAAwB;QA6BGjD,EAAA,CAAAO,SAAA,IAAc;QAAdP,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAA9D,WAAA,CAAc;QAOhB3C,EAAA,CAAAO,SAAA,GAAS;QAATP,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAA/D,MAAA,CAAS;QAOT1C,EAAA,CAAAO,SAAA,GAAS;QAATP,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAAhE,MAAA,CAAS;QAwClBzC,EAAA,CAAAO,SAAA,IAAS;QAATP,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAAlE,MAAA,CAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}