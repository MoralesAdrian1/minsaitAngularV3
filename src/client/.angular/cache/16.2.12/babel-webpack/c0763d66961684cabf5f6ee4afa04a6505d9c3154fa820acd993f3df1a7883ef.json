{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/perfil-admin.service\";\nimport * as i2 from \"@angular/forms\";\nexport class PerfilAdminComponent {\n  constructor(perfilService, fb) {\n    this.perfilService = perfilService;\n    this.fb = fb;\n    this.perfil = [];\n    this.perfilForm = this.fb.group({\n      _id: [''],\n      puesto: [\"\", Validators.required],\n      habilidades: [[], Validators.required],\n      Sos: [[], Validators.required],\n      experiencia: [0, Validators.required],\n      idiomas: [[], Validators.required],\n      certificaciones: [[]] // Cambio para recibir un array vacío\n    });\n  }\n\n  ngOnInit() {\n    this.cargarPerfil();\n  }\n  cargarPerfil() {\n    this.perfilService.getPerfil().subscribe(data => {\n      this.perfil = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarPerfil() {\n    if (this.perfilForm.valid) {\n      this.perfilService.addPerfil(this.perfilForm.value).subscribe(() => {\n        this.cargarPerfil();\n        this.perfilForm.reset();\n      }, error => {\n        console.error('Error al agregar perfil', error);\n      });\n    }\n  }\n  actualizarPerfil() {\n    if (this.perfilForm.valid) {\n      this.perfilService.updatePerfil(this.perfilForm.value).subscribe(() => {\n        this.cargarPerfil();\n        this.perfilForm.reset();\n      }, error => {\n        console.error('Error al actualizar perfil:', error);\n      });\n    }\n  }\n  eliminarPerfil(id) {\n    if (id) {\n      this.perfilService.deletePerfil(id).subscribe(data => {\n        console.log('Perfil eliminado:', data);\n        this.cargarPerfil();\n      }, error => {\n        console.error('Error al eliminar Perfil:', error);\n      });\n    }\n  }\n  editarPerfil(perfil) {\n    this.perfilForm.patchValue(perfil);\n  }\n  static #_ = this.ɵfac = function PerfilAdminComponent_Factory(t) {\n    return new (t || PerfilAdminComponent)(i0.ɵɵdirectiveInject(i1.PerfilAdminService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PerfilAdminComponent,\n    selectors: [[\"app-perfil-admin\"]],\n    decls: 2,\n    vars: 0,\n    template: function PerfilAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"perfil-admin works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","PerfilAdminComponent","constructor","perfilService","fb","perfil","perfilForm","group","_id","puesto","required","habilidades","Sos","experiencia","idiomas","certificaciones","ngOnInit","cargarPerfil","getPerfil","subscribe","data","error","console","agregarPerfil","valid","addPerfil","value","reset","actualizarPerfil","updatePerfil","eliminarPerfil","id","deletePerfil","log","editarPerfil","patchValue","_","i0","ɵɵdirectiveInject","i1","PerfilAdminService","i2","FormBuilder","_2","selectors","decls","vars","template","PerfilAdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\perfil-admin\\perfil-admin.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\perfil-admin\\perfil-admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { PerfilModel } from 'src/app/models/perfilModel';\r\nimport { PerfilAdminService } from 'src/app/services/perfil-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-perfil-admin',\r\n  templateUrl: './perfil-admin.component.html',\r\n  styleUrls: ['./perfil-admin.component.css']\r\n})\r\nexport class PerfilAdminComponent implements OnInit {\r\n  perfil: PerfilModel[] = [];\r\n  perfilForm: FormGroup;\r\n\r\n  constructor(private perfilService: PerfilAdminService, private fb: FormBuilder) {\r\n    this.perfilForm = this.fb.group({\r\n      _id: [''],\r\n      puesto: [\"\", Validators.required],\r\n      habilidades: [[], Validators.required], // Cambio para recibir un array\r\n      Sos: [[], Validators.required], // Cambio para recibir un array\r\n      experiencia: [0, Validators.required],\r\n      idiomas: [[], Validators.required], // Cambio para recibir un array\r\n      certificaciones: [[]], // Cambio para recibir un array vacío\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarPerfil();\r\n  }\r\n\r\n  cargarPerfil() {\r\n    this.perfilService.getPerfil().subscribe(\r\n      data => {\r\n        this.perfil = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar datos Personales:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  agregarPerfil() {\r\n    if (this.perfilForm.valid) {\r\n      this.perfilService.addPerfil(this.perfilForm.value).subscribe(\r\n        () => {\r\n          this.cargarPerfil();\r\n          this.perfilForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al agregar perfil', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actualizarPerfil() {\r\n    if (this.perfilForm.valid) {\r\n      this.perfilService.updatePerfil(this.perfilForm.value).subscribe(\r\n        () => {\r\n          this.cargarPerfil();\r\n          this.perfilForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al actualizar perfil:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  eliminarPerfil(id: string | undefined) {\r\n    if (id) {\r\n      this.perfilService.deletePerfil(id).subscribe(\r\n        data => {\r\n          console.log('Perfil eliminado:', data);\r\n          this.cargarPerfil();\r\n        },\r\n        error => {\r\n          console.error('Error al eliminar Perfil:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  editarPerfil(perfil: PerfilModel) {\r\n    this.perfilForm.patchValue(perfil);\r\n  }\r\n}\r\n","<p>perfil-admin works!</p>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}