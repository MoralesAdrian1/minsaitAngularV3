{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getUser() {\n    return this.http.get(`${this.domain}/api/user`).pipe(map(res => res));\n  }\n  addUser(newUser) {\n    return this.http.post(`${this.domain}/api/user`, newUser).pipe(map(res => res));\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.domain}/api/user/${id}`).pipe(map(res => res));\n  }\n  updateUser(newUser) {\n    return this.http.put(`${this.domain}/api/user/${newUser._id}`, newUser).pipe(map(res => res));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","UserService","constructor","http","domain","getUser","get","pipe","res","addUser","newUser","post","deleteUser","id","delete","updateUser","put","_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { userModel } from '../models/userModel';\r\nimport { map } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  domain: string=\"http://localhost:3000\";\r\n  getUser() {\r\n    return this.http.get<userModel[]>(`${this.domain}/api/user`).pipe(\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  addUser(newUser: userModel){\r\n    return this.http.post<userModel>(`${this.domain}/api/user`,newUser).pipe(\r\n      map(res => res)\r\n      );\r\n  }\r\n\r\n  deleteUser(id: string){\r\n    return this.http.delete<userModel>(`${this.domain}/api/user/${id}`).pipe(\r\n      map(res => res)\r\n      );\r\n  }\r\n  updateUser(newUser: userModel) {\r\n    return this.http.put(`${this.domain}/api/user/${newUser._id}`, newUser).pipe(\r\n      map(res => res)\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAM1B,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,WAAW,CAAC,CAACG,IAAI,CAC/DP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAC,OAAOA,CAACC,OAAkB;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,GAAG,IAAI,CAACP,MAAM,WAAW,EAACM,OAAO,CAAC,CAACH,IAAI,CACtEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EAEAI,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAY,GAAG,IAAI,CAACV,MAAM,aAAaS,EAAE,EAAE,CAAC,CAACN,IAAI,CACtEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EACAO,UAAUA,CAACL,OAAkB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,aAAaM,OAAO,CAACO,GAAG,EAAE,EAAEP,OAAO,CAAC,CAACH,IAAI,CAC1EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAAC,QAAAU,CAAA,G;qBAzBUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}