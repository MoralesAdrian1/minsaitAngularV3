{"ast":null,"code":"import { Validators } from '@angular/forms'; // Importa FormBuilder y Validators\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/datos-pservice.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DatosPComponent_tr_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_74_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const datos_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editarDatosP(datos_r1));\n    });\n    i0.ɵɵelement(17, \"i\", 37);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"td\")(19, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_74_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const datos_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminarDatosP(datos_r1._id));\n    });\n    i0.ɵɵelement(20, \"i\", 39);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const datos_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.dateNac);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.sexo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.cp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.nombrePais);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.nombreEstado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r1.nombreCiudad);\n  }\n}\nexport class DatosPComponent {\n  constructor(DatosPService, fb) {\n    this.DatosPService = DatosPService;\n    this.fb = fb;\n    this.datosP = [];\n    this.paises = [];\n    this.ciudad = [];\n    this.estado = [];\n    this.allEstados = []; // Lista de todos los estados\n    this.filteredEstados = [];\n    this.filtroEstado = '';\n    this.filtroCiudad = '';\n    this.filtroPais = '';\n    this.filtroSexo = '';\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required],\n      cp: [0, Validators.required],\n      nombrePais: ['', Validators.required],\n      nombreEstado: ['', Validators.required],\n      nombreCiudad: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarDatosP();\n    this.cargarPaises();\n    this.cargarEstado();\n    this.cargarEstados();\n  }\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(data => {\n      this.datosP = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al agregar Datos Personales:', error);\n      });\n    }\n  }\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al actualizar Datos Personales:', error);\n      });\n    }\n  }\n  eliminarDatosP(id) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(data => {\n        console.log('Ciudad eliminada:', data);\n        this.cargarDatosP();\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n      });\n    }\n  }\n  editarDatosP(datosP) {\n    this.datosPForm.patchValue(datosP);\n  }\n  //filtrado de datos\n  cargarPaises() {\n    this.DatosPService.getPaises().subscribe(data => {\n      this.paises = data;\n    }, error => {\n      console.error('Error al cargar Paises:', error);\n    });\n  }\n  cargarEstado() {\n    this.DatosPService.getEstados().subscribe(data => {\n      this.estado = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  filtrarEstadosPorPais(nombrePais) {\n    this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\n  }\n  cargarEstados() {\n    this.DatosPService.getEstados().subscribe(data => {\n      this.allEstados = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  onPaisSelected(event) {\n    const nombrePaisSeleccionado = event.target.value;\n    if (nombrePaisSeleccionado !== null) {\n      this.filtrarEstadosPorPais(nombrePaisSeleccionado);\n    }\n  }\n  static #_ = this.ɵfac = function DatosPComponent_Factory(t) {\n    return new (t || DatosPComponent)(i0.ɵɵdirectiveInject(i1.DatosPService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatosPComponent,\n    selectors: [[\"app-datos-p\"]],\n    decls: 76,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"text-dart\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"telefono\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"telefono\", \"name\", \"telefono\", \"formControlName\", \"telefono\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateNac\", 1, \"text-dart\"], [\"type\", \"date\", \"id\", \"dateNac\", \"name\", \"dateNac\", \"formControlName\", \"dateNac\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"sexo\", 1, \"text-dart\"], [\"id\", \"sexo\", \"name\", \"sexo\", \"formControlName\", \"sexo\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"M\"], [\"value\", \"F\"], [\"value\", \"otro\"], [\"for\", \"cp\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"cp\", \"name\", \"cp\", \"formControlName\", \"cp\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"nombrePais\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"nombrePais\", \"name\", \"nombrePais\", \"formControlName\", \"nombrePais\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"nombreEstado\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"nombreEstado\", \"name\", \"nombreEstado\", \"formControlName\", \"nombreEstado\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"nombreCiudad\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"nombreCiudad\", \"name\", \"nombreCiudad\", \"formControlName\", \"nombreCiudad\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"col-md-8\"], [1, \"table\"], [1, \"table-primary\"], [\"scope\", \"col\"], [\"id\", \"datosP-table-body\"], [4, \"ngFor\", \"ngForOf\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\", \"integrity\", \"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\", \"crossorigin\", \"anonymous\"], [1, \"btn\", \"btn-sm\", \"ms-2\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ms-2\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]],\n    template: function DatosPComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Agregar/Editar Datos Personales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6)(9, \"fieldset\")(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Telefono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Ingresa tu Fecha de nacimiento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Ingresa tu sexo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 13)(22, \"option\", 14);\n        i0.ɵɵtext(23, \"Selecciona tu sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\", 15);\n        i0.ɵɵtext(25, \"Masculino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\", 16);\n        i0.ɵɵtext(27, \"Femenino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 17);\n        i0.ɵɵtext(29, \"Otro\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 7)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Ingresa tu Codigo Postal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 7)(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Ingresa tu Pais:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\", 22);\n        i0.ɵɵtext(40, \"Ingresa tu Estado:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 5)(43, \"label\", 24);\n        i0.ɵɵtext(44, \"Ingresa tu Ciudad:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 26)(47, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_47_listener() {\n          return ctx.agregarDatosP();\n        });\n        i0.ɵɵtext(48, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_49_listener() {\n          return ctx.actualizarDatosP();\n        });\n        i0.ɵɵtext(50, \"Actualizar\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(51, \"div\", 29)(52, \"table\", 30)(53, \"thead\")(54, \"tr\", 31)(55, \"th\", 32);\n        i0.ɵɵtext(56, \"Tel\\u00E9fono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"th\", 32);\n        i0.ɵɵtext(58, \"Fecha de Nacimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"th\", 32);\n        i0.ɵɵtext(60, \"Sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"th\", 32);\n        i0.ɵɵtext(62, \"C\\u00F3digo Postal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"th\", 32);\n        i0.ɵɵtext(64, \"Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"th\", 32);\n        i0.ɵɵtext(66, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"th\", 32);\n        i0.ɵɵtext(68, \"Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"th\", 32);\n        i0.ɵɵtext(70, \"Editar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"th\", 32);\n        i0.ɵɵtext(72, \"Eliminar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(73, \"tbody\", 33);\n        i0.ɵɵtemplate(74, DatosPComponent_tr_74_Template, 21, 7, \"tr\", 34);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(75, \"link\", 35);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.datosPForm);\n        i0.ɵɵadvance(66);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosP);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DatosPComponent_tr_74_Template_button_click_16_listener","restoredCtx","ɵɵrestoreView","_r3","datos_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editarDatosP","ɵɵelement","DatosPComponent_tr_74_Template_button_click_19_listener","ctx_r4","eliminarDatosP","_id","ɵɵadvance","ɵɵtextInterpolate","telefono","dateNac","sexo","cp","nombrePais","nombreEstado","nombreCiudad","DatosPComponent","constructor","DatosPService","fb","datosP","paises","ciudad","estado","allEstados","filteredEstados","filtroEstado","filtroCiudad","filtroPais","filtroSexo","datosPForm","group","required","ngOnInit","cargarDatosP","cargarPaises","cargarEstado","cargarEstados","getDatosP","subscribe","data","error","console","agregarDatosP","valid","addDatosP","value","reset","actualizarDatosP","updateDatosP","id","deleteDatosP","log","patchValue","getPaises","getEstados","filtrarEstadosPorPais","filter","onPaisSelected","event","nombrePaisSeleccionado","target","_","ɵɵdirectiveInject","i1","i2","FormBuilder","_2","selectors","decls","vars","consts","template","DatosPComponent_Template","rf","ctx","DatosPComponent_Template_button_click_47_listener","DatosPComponent_Template_button_click_49_listener","ɵɵtemplate","DatosPComponent_tr_74_Template","ɵɵproperty"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // Importa FormBuilder y Validators\n\n\nimport { ReactiveFormsModule } from '@angular/forms'; // Importa ReactiveFormsModule\n//servicios\nimport { DatosPService } from 'src/app/services/datos-pservice.service';\n//modelos\nimport { DatosPModel } from 'src/app/models/datosPModel';\nimport { paisModel } from 'src/app/models/paisModel';\nimport { CiudadModel } from 'src/app/models/ciudadModel';\nimport { EstadoModel } from 'src/app/models/estadoModel';\nimport { EstadoService } from 'src/app/services/estado.service';\nimport { CiudadService } from 'src/app/services/ciudad.service';\n\n@Component({\n  selector: 'app-datos-p',\n  templateUrl: './datos-p.component.html',\n  styleUrls: ['./datos-p.component.css']\n})\nexport class DatosPComponent implements OnInit {\n  datosP: DatosPModel[] = [];\n  paises: paisModel[] = [];\n  ciudad: CiudadModel[]=[];\n  estado: EstadoModel[]=[];\n  allEstados: EstadoModel[] = []; // Lista de todos los estados\n  filteredEstados: EstadoModel[] = [];\n\n  datosPForm: FormGroup;\n  filtroEstado: string = '';\n  filtroCiudad: string = '';\n  filtroPais: string = '';\n  filtroSexo: string = '';\n\n\n  constructor(private DatosPService: DatosPService, private fb: FormBuilder) {\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required], \n      cp: [0, Validators.required], \n      nombrePais: ['', Validators.required], \n      nombreEstado: ['', Validators.required], \n      nombreCiudad: ['', Validators.required] \n    });\n  }\n\n  ngOnInit() {\n    this.cargarDatosP();\n    this.cargarPaises();\n    this.cargarEstado();\n    this.cargarEstados();\n  }\n\n  cargarDatosP() {\n    this.DatosPService.getDatosP().subscribe(\n      data => {\n        this.datosP = data;\n      },\n      error => {\n        console.error('Error al cargar datos Personales:', error);\n      }\n    );\n  }\n\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.addDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al agregar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.DatosPService.updateDatosP(this.datosPForm.value).subscribe(\n        () => {\n          this.cargarDatosP();\n          this.datosPForm.reset();\n        },\n        error => {\n          console.error('Error al actualizar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  eliminarDatosP(id: string | undefined) {\n    if (id) {\n      this.DatosPService.deleteDatosP(id).subscribe(\n        data => {\n          console.log('Ciudad eliminada:', data);\n          this.cargarDatosP();\n        },\n        error => {\n          console.error('Error al eliminar ciudad:', error);\n        }\n      );\n    }\n  }\n\n  editarDatosP(datosP: DatosPModel) {\n    this.datosPForm.patchValue(datosP);\n  }\n //filtrado de datos\n cargarPaises() {\n  this.DatosPService.getPaises().subscribe(\n    data => {\n      this.paises = data;\n    },\n    error => {\n      console.error('Error al cargar Paises:', error);\n    }\n  );\n}\ncargarEstado() {\n  this.DatosPService.getEstados().subscribe(\n    data => {\n      this.estado = data;\n    },\n    error => {\n      console.error('Error al cargar Estados:', error);\n    }\n  );\n}\n filtrarEstadosPorPais(nombrePais: string) {\n  this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\n}\ncargarEstados() {\n\n  this.DatosPService.getEstados().subscribe(\n    data => {\n      this.allEstados = data;\n    },\n    error => {\n      console.error('Error al cargar Estados:', error);\n    }\n  );\n}\nonPaisSelected(event: any) {\n  const nombrePaisSeleccionado = event.target.value;\n  if (nombrePaisSeleccionado !== null) {\n    this.filtrarEstadosPorPais(nombrePaisSeleccionado);\n  }\n}\n}","<div class=\"container\">\n  <br>\n  <div class=\"row\">\n    <!-- Parte Izquierda - Formulario -->\n    <div class=\"col-md-4\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\" class=\"text-dart\">Agregar/Editar Datos Personales</h5>\n\n          <form [formGroup]=\"datosPForm\">\n              <fieldset>\n            <div class=\"form-group\">\n              <label for=\"telefono\" class=\"text-dart\">Telefono</label>\n              <input type=\"text\" class=\"form-control\" id=\"telefono\" name=\"telefono\" formControlName=\"telefono\" required>\n            </div>\n           </fieldset>\n           <div class=\"form-group\">\n              <label for=\"dateNac\" class=\"text-dart\">Ingresa tu Fecha de nacimiento:</label>\n              <input type=\"date\" class=\"form-control\" id=\"dateNac\" name=\"dateNac\" formControlName=\"dateNac\" required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"sexo\" class=\"text-dart\">Ingresa tu sexo:</label>\n              <select class=\"form-control\" id=\"sexo\" name=\"sexo\" formControlName=\"sexo\" required>\n                <option value=\"\">Selecciona tu sexo</option>\n                <option value=\"M\">Masculino</option>\n                <option value=\"F\">Femenino</option>\n                <option value=\"otro\">Otro</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"cp\" class=\"text-dart\">Ingresa tu Codigo Postal:</label>\n              <input type=\"text\" class=\"form-control\" id=\"cp\" name=\"cp\" formControlName=\"cp\" required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"nombrePais\" class=\"text-dart\">Ingresa tu Pais:</label>\n              <input type=\"text\" class=\"form-control\" id=\"nombrePais\" name=\"nombrePais\" formControlName=\"nombrePais\" required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"nombreEstado\" class=\"text-dart\">Ingresa tu Estado:</label>\n              <input type=\"text\" class=\"form-control\" id=\"nombreEstado\" name=\"nombreEstado\" formControlName=\"nombreEstado\" required>\n            </div>\n            <div class=\"form-group\" class=\"text-dart\">\n              <label for=\"nombreCiudad\" class=\"text-dart\">Ingresa tu Ciudad:</label>\n              <input type=\"text\" class=\"form-control\" id=\"nombreCiudad\" name=\"nombreCiudad\" formControlName=\"nombreCiudad\" required>\n            </div>\n            <div class=\"btn-group mt-2\" >\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarDatosP()\">Agregar</button>\n              <button type=\"button\" class=\"btn btn-success ms-2\" (click)=\"actualizarDatosP()\">Actualizar</button>\n            </div>\n          </form>\n          \n        </div>\n      </div>\n    </div>\n\n    <!-- Parte Derecha - Tabla -->\n    <div class=\"col-md-8\">\n      <table class=\"table\">\n        <thead>\n          <tr class=\"table-primary\">\n            <th scope=\"col\">Teléfono</th>\n            <th scope=\"col\">Fecha de Nacimiento</th>\n            <th scope=\"col\">Sexo</th>\n            <th scope=\"col\">Código Postal</th>\n            <th scope=\"col\">País</th>\n            <th scope=\"col\">Estado</th>\n            <th scope=\"col\">Ciudad</th>\n            <th scope=\"col\">Editar</th>\n            <th scope=\"col\">Eliminar</th>\n          </tr>\n        </thead>\n        <tbody id=\"datosP-table-body\">\n          <tr *ngFor=\"let datos of datosP\">\n            <td>{{ datos.telefono }}</td>\n            <td>{{ datos.dateNac }}</td>\n            <td>{{ datos.sexo }}</td>\n            <td>{{ datos.cp }}</td>\n            <td>{{ datos.nombrePais }}</td>\n            <td>{{ datos.nombreEstado }}</td>\n            <td>{{ datos.nombreCiudad }}</td>\n            <td>\n              <button class=\"btn btn-sm ms-2 btn-primary\" (click)=\"editarDatosP(datos)\"><i class=\"fa fa-edit\"></i></button>\n            </td>\n            <td>\n              <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\" (click)=\"eliminarDatosP(datos._id)\"><i class=\"fa fa-trash\"></i></button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\" integrity=\"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\" crossorigin=\"anonymous\">"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}