{"ast":null,"code":"import { Validators } from '@angular/forms'; // Importa FormBuilder y Validators\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/datos-pservice.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/ciudad.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nfunction DatosPComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r4.nombrePais);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pais_r4.nombrePais);\n  }\n}\nfunction DatosPComponent_option_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estado_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", estado_r5.nombreEstado);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(estado_r5.nombreEstado);\n  }\n}\nfunction DatosPComponent_option_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ciudad_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ciudad_r6.nombreCiudad);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ciudad_r6.nombreCiudad);\n  }\n}\nfunction DatosPComponent_tr_89_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_89_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const datos_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editarDatosP(datos_r7));\n    });\n    i0.ɵɵelement(19, \"i\", 41);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function DatosPComponent_tr_89_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const datos_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.eliminarDatosP(datos_r7._id));\n    });\n    i0.ɵɵelement(22, \"i\", 43);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const datos_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.dateNac);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.sexo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.cp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombrePais);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombreEstado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datos_r7.nombreCiudad);\n  }\n}\nexport class DatosPComponent {\n  constructor(datosPService, fb, ciudadService // Agrega el servicio de CiudadService\n  ) {\n    this.datosPService = datosPService;\n    this.fb = fb;\n    this.ciudadService = ciudadService;\n    this.datosP = [];\n    this.paises = [];\n    this.ciudad = [];\n    this.estado = [];\n    this.allEstados = [];\n    this.allCiudades = [];\n    this.filteredEstados = [];\n    this.filteredCiudades = [];\n    this.filtroEstado = '';\n    this.filtroCiudad = '';\n    this.filtroPais = '';\n    this.filtroSexo = '';\n    this.datosPForm = this.fb.group({\n      _id: [''],\n      username: ['', Validators.required],\n      telefono: [0, Validators.required],\n      dateNac: [0, Validators.required],\n      sexo: ['', Validators.required],\n      cp: [0, Validators.required],\n      nombrePais: ['', Validators.required],\n      nombreEstado: ['', Validators.required],\n      nombreCiudad: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarDatosP();\n    this.cargarPaises();\n    this.cargarEstado();\n    this.cargarEstados();\n    this.cargarCiudad();\n    this.cargarCiudades(); // Agrega la carga de ciudades al inicializar el componente\n  }\n\n  cargarDatosP() {\n    this.datosPService.getDatosP().subscribe(data => {\n      this.datosP = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarDatosP() {\n    if (this.datosPForm.valid) {\n      this.datosPService.addDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al agregar Datos Personales:', error);\n      });\n    }\n  }\n  actualizarDatosP() {\n    if (this.datosPForm.valid) {\n      this.datosPService.updateDatosP(this.datosPForm.value).subscribe(() => {\n        this.cargarDatosP();\n        this.datosPForm.reset();\n      }, error => {\n        console.error('Error al actualizar Datos Personales:', error);\n      });\n    }\n  }\n  eliminarDatosP(id) {\n    if (id) {\n      this.datosPService.deleteDatosP(id).subscribe(data => {\n        console.log('Ciudad eliminada:', data);\n        this.cargarDatosP();\n      }, error => {\n        console.error('Error al eliminar ciudad:', error);\n      });\n    }\n  }\n  editarDatosP(datosP) {\n    this.datosPForm.patchValue(datosP);\n  }\n  // Filtrado de datos\n  cargarPaises() {\n    this.datosPService.getPaises().subscribe(data => {\n      this.paises = data;\n    }, error => {\n      console.error('Error al cargar Paises:', error);\n    });\n  }\n  cargarEstado() {\n    this.datosPService.getEstados().subscribe(data => {\n      this.estado = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  cargarCiudad() {\n    this.ciudadService.getCiudad().subscribe(data => {\n      this.ciudad = data;\n    }, error => {\n      console.error('Error al cargar Ciudades:', error);\n    });\n  }\n  filtrarEstadosPorPais(nombrePais) {\n    this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\n  }\n  filtrarCiudadesPorEstado(nombreEstado) {\n    this.filteredCiudades = this.ciudad.filter(ciudad => ciudad.nombreEstado === nombreEstado);\n  }\n  cargarEstados() {\n    this.datosPService.getEstados().subscribe(data => {\n      this.allEstados = data;\n    }, error => {\n      console.error('Error al cargar Estados:', error);\n    });\n  }\n  cargarCiudades() {\n    this.datosPService.getCiudades().subscribe(data => {\n      this.allCiudades = data;\n    }, error => {\n      console.error('Error al cargar Ciudades:', error);\n    });\n  }\n  onPaisSelected(event) {\n    const nombrePaisSeleccionado = event.target.value;\n    if (nombrePaisSeleccionado !== null) {\n      this.filtrarEstadosPorPais(nombrePaisSeleccionado);\n    }\n  }\n  onEstadoSelected(event) {\n    const nombreEstadoSeleccionado = event.target.value;\n    if (nombreEstadoSeleccionado !== null) {\n      this.filtrarCiudadesPorEstado(nombreEstadoSeleccionado);\n    }\n  }\n  static #_ = this.ɵfac = function DatosPComponent_Factory(t) {\n    return new (t || DatosPComponent)(i0.ɵɵdirectiveInject(i1.DatosPService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CiudadService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatosPComponent,\n    selectors: [[\"app-datos-p\"]],\n    decls: 91,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"text-dart\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"telefono\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"telefono\", \"name\", \"telefono\", \"formControlName\", \"telefono\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"dateNac\", 1, \"text-dart\"], [\"type\", \"date\", \"id\", \"dateNac\", \"name\", \"dateNac\", \"formControlName\", \"dateNac\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"sexo\", 1, \"text-dart\"], [\"id\", \"sexo\", \"name\", \"sexo\", \"formControlName\", \"sexo\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"M\"], [\"value\", \"F\"], [\"value\", \"otro\"], [\"for\", \"cp\", 1, \"text-dart\"], [\"type\", \"text\", \"id\", \"cp\", \"name\", \"cp\", \"formControlName\", \"cp\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"nombrePais\", 1, \"text-dart\"], [\"id\", \"nombrePais\", \"name\", \"nombrePais\", \"formControlName\", \"nombrePais\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"nombreEstado\", 1, \"text-dart\"], [\"id\", \"nombreEstado\", \"name\", \"nombreEstado\", \"formControlName\", \"nombreEstado\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [\"for\", \"nombreCiudad\", 1, \"text-dart\"], [\"id\", \"nombreCiudad\", \"name\", \"nombreCiudad\", \"formControlName\", \"nombreCiudad\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"col-md-8\"], [1, \"table\", \"table-striped\", \"table-hover\"], [1, \"table-primary\"], [\"scope\", \"col\"], [\"id\", \"datosP-table-body\"], [4, \"ngFor\", \"ngForOf\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\", \"integrity\", \"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\", \"crossorigin\", \"anonymous\"], [3, \"value\"], [\"routerLink\", \"/cv\", 1, \"btn\", \"btn-sm\", \"ms-2\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ms-2\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]],\n    template: function DatosPComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Agregar/Editar Datos Personales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6)(9, \"fieldset\")(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Telefono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Ingresa tu Fecha de nacimiento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Ingresa tu sexo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"select\", 15)(26, \"option\", 16);\n        i0.ɵɵtext(27, \"Selecciona tu sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 17);\n        i0.ɵɵtext(29, \"Masculino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 18);\n        i0.ɵɵtext(31, \"Femenino\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 19);\n        i0.ɵɵtext(33, \"Otro\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"div\", 7)(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Ingresa tu Codigo Postal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\", 22);\n        i0.ɵɵtext(40, \"Nombre Del pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"select\", 23);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_41_listener($event) {\n          return ctx.onPaisSelected($event);\n        });\n        i0.ɵɵelementStart(42, \"option\", 16);\n        i0.ɵɵtext(43, \"Selecciona un pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, DatosPComponent_option_44_Template, 2, 2, \"option\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 7)(46, \"label\", 25);\n        i0.ɵɵtext(47, \"Nombre Del Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"select\", 26);\n        i0.ɵɵlistener(\"change\", function DatosPComponent_Template_select_change_48_listener($event) {\n          return ctx.onEstadoSelected($event);\n        });\n        i0.ɵɵelementStart(49, \"option\", 16);\n        i0.ɵɵtext(50, \"Selecciona un Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(51, DatosPComponent_option_51_Template, 2, 2, \"option\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"div\", 7)(53, \"label\", 27);\n        i0.ɵɵtext(54, \"Nombre de la Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"select\", 28)(56, \"option\", 16);\n        i0.ɵɵtext(57, \"Selecciona una Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, DatosPComponent_option_58_Template, 2, 2, \"option\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(59, \"div\", 29)(60, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_60_listener() {\n          return ctx.agregarDatosP();\n        });\n        i0.ɵɵtext(61, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function DatosPComponent_Template_button_click_62_listener() {\n          return ctx.actualizarDatosP();\n        });\n        i0.ɵɵtext(63, \"Actualizar\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(64, \"div\", 32)(65, \"table\", 33)(66, \"thead\")(67, \"tr\", 34)(68, \"th\", 35);\n        i0.ɵɵtext(69, \"username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"th\", 35);\n        i0.ɵɵtext(71, \"Tel\\u00E9fono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"th\", 35);\n        i0.ɵɵtext(73, \"Fecha de Nacimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"th\", 35);\n        i0.ɵɵtext(75, \"Sexo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"th\", 35);\n        i0.ɵɵtext(77, \"C\\u00F3digo Postal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"th\", 35);\n        i0.ɵɵtext(79, \"Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"th\", 35);\n        i0.ɵɵtext(81, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"th\", 35);\n        i0.ɵɵtext(83, \"Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"th\", 35);\n        i0.ɵɵtext(85, \"Editar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"th\", 35);\n        i0.ɵɵtext(87, \"Eliminar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(88, \"tbody\", 36);\n        i0.ɵɵtemplate(89, DatosPComponent_tr_89_Template, 23, 8, \"tr\", 37);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(90, \"link\", 38);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.datosPForm);\n        i0.ɵɵadvance(36);\n        i0.ɵɵproperty(\"ngForOf\", ctx.paises);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredEstados);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredCiudades);\n        i0.ɵɵadvance(31);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datosP);\n      }\n    },\n    dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i5.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","pais_r4","nombrePais","ɵɵadvance","ɵɵtextInterpolate","estado_r5","nombreEstado","ciudad_r6","nombreCiudad","ɵɵlistener","DatosPComponent_tr_89_Template_button_click_18_listener","restoredCtx","ɵɵrestoreView","_r9","datos_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","editarDatosP","ɵɵelement","DatosPComponent_tr_89_Template_button_click_21_listener","ctx_r10","eliminarDatosP","_id","username","telefono","dateNac","sexo","cp","DatosPComponent","constructor","datosPService","fb","ciudadService","datosP","paises","ciudad","estado","allEstados","allCiudades","filteredEstados","filteredCiudades","filtroEstado","filtroCiudad","filtroPais","filtroSexo","datosPForm","group","required","ngOnInit","cargarDatosP","cargarPaises","cargarEstado","cargarEstados","cargarCiudad","cargarCiudades","getDatosP","subscribe","data","error","console","agregarDatosP","valid","addDatosP","value","reset","actualizarDatosP","updateDatosP","id","deleteDatosP","log","patchValue","getPaises","getEstados","getCiudad","filtrarEstadosPorPais","filter","filtrarCiudadesPorEstado","getCiudades","onPaisSelected","event","nombrePaisSeleccionado","target","onEstadoSelected","nombreEstadoSeleccionado","_","ɵɵdirectiveInject","i1","DatosPService","i2","FormBuilder","i3","CiudadService","_2","selectors","decls","vars","consts","template","DatosPComponent_Template","rf","ctx","DatosPComponent_Template_select_change_41_listener","$event","ɵɵtemplate","DatosPComponent_option_44_Template","DatosPComponent_Template_select_change_48_listener","DatosPComponent_option_51_Template","DatosPComponent_option_58_Template","DatosPComponent_Template_button_click_60_listener","DatosPComponent_Template_button_click_62_listener","DatosPComponent_tr_89_Template"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\datos-p\\datos-p.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // Importa FormBuilder y Validators\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms'; // Importa ReactiveFormsModule\r\n//servicios\r\nimport { DatosPService } from 'src/app/services/datos-pservice.service';\r\n//modelos\r\nimport { DatosPModel } from 'src/app/models/datosPModel';\r\nimport { paisModel } from 'src/app/models/paisModel';\r\nimport { CiudadModel } from 'src/app/models/ciudadModel';\r\nimport { EstadoModel } from 'src/app/models/estadoModel';\r\nimport { EstadoService } from 'src/app/services/estado.service';\r\nimport { CiudadService } from 'src/app/services/ciudad.service';\r\n\r\n@Component({\r\n  selector: 'app-datos-p',\r\n  templateUrl: './datos-p.component.html',\r\n  styleUrls: ['./datos-p.component.css']\r\n})\r\nexport class DatosPComponent implements OnInit {\r\n  datosP: DatosPModel[] = [];\r\n  paises: paisModel[] = [];\r\n  ciudad: CiudadModel[] = [];\r\n  estado: EstadoModel[] = [];\r\n  allEstados: EstadoModel[] = [];\r\n  allCiudades: EstadoModel[] = [];\r\n  filteredEstados: EstadoModel[] = [];\r\n  filteredCiudades: CiudadModel[] = [];\r\n\r\n  datosPForm: FormGroup;\r\n  filtroEstado: string = '';\r\n  filtroCiudad: string = '';\r\n  filtroPais: string = '';\r\n  filtroSexo: string = '';\r\n\r\n  constructor(\r\n    private datosPService: DatosPService,\r\n    private fb: FormBuilder,\r\n    private ciudadService: CiudadService // Agrega el servicio de CiudadService\r\n  ) {\r\n    this.datosPForm = this.fb.group({\r\n      _id: [''],\r\n      username: ['', Validators.required],\r\n      telefono: [0, Validators.required],\r\n      dateNac: [0, Validators.required],\r\n      sexo: ['', Validators.required],\r\n      cp: [0, Validators.required],\r\n      nombrePais: ['', Validators.required],\r\n      nombreEstado: ['', Validators.required],\r\n      nombreCiudad: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarDatosP();\r\n    this.cargarPaises();\r\n    this.cargarEstado();\r\n    this.cargarEstados();\r\n    this.cargarCiudad();\r\n    this.cargarCiudades(); // Agrega la carga de ciudades al inicializar el componente\r\n  }\r\n\r\n  cargarDatosP() {\r\n    this.datosPService.getDatosP().subscribe(\r\n      data => {\r\n        this.datosP = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar datos Personales:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  agregarDatosP() {\r\n    if (this.datosPForm.valid) {\r\n      this.datosPService.addDatosP(this.datosPForm.value).subscribe(\r\n        () => {\r\n          this.cargarDatosP();\r\n          this.datosPForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al agregar Datos Personales:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actualizarDatosP() {\r\n    if (this.datosPForm.valid) {\r\n      this.datosPService.updateDatosP(this.datosPForm.value).subscribe(\r\n        () => {\r\n          this.cargarDatosP();\r\n          this.datosPForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al actualizar Datos Personales:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  eliminarDatosP(id: string | undefined) {\r\n    if (id) {\r\n      this.datosPService.deleteDatosP(id).subscribe(\r\n        data => {\r\n          console.log('Ciudad eliminada:', data);\r\n          this.cargarDatosP();\r\n        },\r\n        error => {\r\n          console.error('Error al eliminar ciudad:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  editarDatosP(datosP: DatosPModel) {\r\n    this.datosPForm.patchValue(datosP);\r\n  }\r\n\r\n  // Filtrado de datos\r\n  cargarPaises() {\r\n    this.datosPService.getPaises().subscribe(\r\n      data => {\r\n        this.paises = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Paises:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cargarEstado() {\r\n    this.datosPService.getEstados().subscribe(\r\n      data => {\r\n        this.estado = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Estados:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cargarCiudad() {\r\n    this.ciudadService.getCiudad().subscribe(\r\n      data => {\r\n        this.ciudad = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Ciudades:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  filtrarEstadosPorPais(nombrePais: string) {\r\n    this.filteredEstados = this.allEstados.filter(estado => estado.nombrePais === nombrePais);\r\n  }\r\n\r\n  filtrarCiudadesPorEstado(nombreEstado: string) {\r\n    this.filteredCiudades = this.ciudad.filter(ciudad => ciudad.nombreEstado === nombreEstado);\r\n  }\r\n\r\n  cargarEstados() {\r\n    this.datosPService.getEstados().subscribe(\r\n      data => {\r\n        this.allEstados = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Estados:', error);\r\n      }\r\n    );\r\n  }\r\n  cargarCiudades() {\r\n    this.datosPService.getCiudades().subscribe(\r\n      data => {\r\n        this.allCiudades = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar Ciudades:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onPaisSelected(event: any) {\r\n    const nombrePaisSeleccionado = event.target.value;\r\n    if (nombrePaisSeleccionado !== null) {\r\n      this.filtrarEstadosPorPais(nombrePaisSeleccionado);\r\n    }\r\n  }\r\n\r\n  onEstadoSelected(event: any) {\r\n    const nombreEstadoSeleccionado = event.target.value;\r\n    if (nombreEstadoSeleccionado !== null) {\r\n      this.filtrarCiudadesPorEstado(nombreEstadoSeleccionado);\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n  <br>\r\n  <div class=\"row\">\r\n    <!-- Parte Izquierda - Formulario -->\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\" class=\"text-dart\">Agregar/Editar Datos Personales</h5>\r\n\r\n          <form [formGroup]=\"datosPForm\">\r\n              <fieldset>\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\" class=\"text-dart\">username</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" formControlName=\"username\" required>\r\n                </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"telefono\" class=\"text-dart\">Telefono</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"telefono\" name=\"telefono\" formControlName=\"telefono\" required>\r\n            </div>\r\n           </fieldset>\r\n           <div class=\"form-group\">\r\n              <label for=\"dateNac\" class=\"text-dart\">Ingresa tu Fecha de nacimiento:</label>\r\n              <input type=\"date\" class=\"form-control\" id=\"dateNac\" name=\"dateNac\" formControlName=\"dateNac\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"sexo\" class=\"text-dart\">Ingresa tu sexo:</label>\r\n              <select class=\"form-control\" id=\"sexo\" name=\"sexo\" formControlName=\"sexo\" required>\r\n                <option value=\"\">Selecciona tu sexo</option>\r\n                <option value=\"M\">Masculino</option>\r\n                <option value=\"F\">Femenino</option>\r\n                <option value=\"otro\">Otro</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"cp\" class=\"text-dart\">Ingresa tu Codigo Postal:</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"cp\" name=\"cp\" formControlName=\"cp\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"nombrePais\" class=\"text-dart\">Nombre Del país</label>\r\n              <select class=\"form-control\" id=\"nombrePais\" name=\"nombrePais\" formControlName=\"nombrePais\" (change)=\"onPaisSelected($event)\" required>\r\n                <option value=\"\">Selecciona un país</option>\r\n                <option *ngFor=\"let pais of paises\" [value]=\"pais.nombrePais\">{{ pais.nombrePais }}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"nombreEstado\" class=\"text-dart\">Nombre Del Estado</label>\r\n              <select class=\"form-control\" id=\"nombreEstado\" name=\"nombreEstado\" formControlName=\"nombreEstado\" (change)=\"onEstadoSelected($event)\" required>\r\n                <option value=\"\">Selecciona un Estado</option>\r\n                <option *ngFor=\"let estado of filteredEstados\" [value]=\"estado.nombreEstado\">{{ estado.nombreEstado }}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"nombreCiudad\" class=\"text-dart\">Nombre de la Ciudad</label>\r\n              <select class=\"form-control\" id=\"nombreCiudad\" name=\"nombreCiudad\" formControlName=\"nombreCiudad\" required>\r\n                <option value=\"\">Selecciona una Ciudad</option>\r\n                <option *ngFor=\"let ciudad of filteredCiudades\" [value]=\"ciudad.nombreCiudad\">{{ ciudad.nombreCiudad }}</option>\r\n              </select>\r\n            </div>\r\n\r\n            \r\n            \r\n            \r\n            \r\n            <div class=\"btn-group mt-2\" >\r\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarDatosP()\">Agregar</button>\r\n              <button type=\"button\" class=\"btn btn-success ms-2\" (click)=\"actualizarDatosP()\">Actualizar</button>\r\n            </div>\r\n          </form>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Parte Derecha - Tabla -->\r\n    <div class=\"col-md-8\">\r\n      <table class=\"table table-striped table-hover \" >\r\n        <thead>\r\n          <tr class=\"table-primary\">\r\n            <th scope=\"col\">username</th>\r\n            <th scope=\"col\">Teléfono</th>\r\n            <th scope=\"col\">Fecha de Nacimiento</th>\r\n            <th scope=\"col\">Sexo</th>\r\n            <th scope=\"col\">Código Postal</th>\r\n            <th scope=\"col\">País</th>\r\n            <th scope=\"col\">Estado</th>\r\n            <th scope=\"col\">Ciudad</th>\r\n            <th scope=\"col\">Editar</th>\r\n            <th scope=\"col\">Eliminar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"datosP-table-body\">\r\n          <tr *ngFor=\"let datos of datosP\">\r\n            <td>{{ datos.username }}</td>\r\n            <td>{{ datos.telefono }}</td>\r\n            <td>{{ datos.dateNac }}</td>\r\n            <td>{{ datos.sexo }}</td>\r\n            <td>{{ datos.cp }}</td>\r\n            <td>{{ datos.nombrePais }}</td>\r\n            <td>{{ datos.nombreEstado }}</td>\r\n            <td>{{ datos.nombreCiudad }}</td>\r\n            <td>\r\n              <button class=\"btn btn-sm ms-2 btn-primary\" (click)=\"editarDatosP(datos)\" routerLink=\"/cv\"><i class=\"fa fa-edit\"></i></button>\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-danger btn-sm ms-2\" (click)=\"eliminarDatosP(datos._id)\"><i class=\"fa fa-trash\"></i></button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/flatly/bootstrap.min.css\" integrity=\"sha384-qF/QmIAj5ZaYFAeQcrQ6bfVMAh4zZlrGwTPY7T/M+iTTLJqJBJjwwnsE5Y0mV7QK\" crossorigin=\"anonymous\">"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}