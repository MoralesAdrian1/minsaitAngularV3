{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/pais.service\";\nimport * as i2 from \"@angular/forms\";\nexport class PaisComponent {\n  constructor(PaisService, fb) {\n    this.PaisService = PaisService;\n    this.fb = fb;\n    this.datosP = [];\n    this.paisForm = this.fb.group({\n      _id: [''],\n      nombre: [\"\", Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarPais();\n  }\n  cargarPais() {\n    this.PaisService.getPais().subscribe(data => {\n      this.datosP = data;\n    }, error => {\n      console.error('Error al cargar datos Personales:', error);\n    });\n  }\n  agregarPais() {\n    if (this.paisForm.valid) {\n      this.PaisService.addPais(this.paisForm.value).subscribe(() => {\n        this.cargarPais();\n        this.paisForm.reset();\n      }, error => {\n        console.error('Error al agregar Datos Personales:', error);\n      });\n    }\n  }\n  actualizarDatosP() {\n    if (this.paisForm.valid) {\n      this.PaisService.updatePais(this.paisForm.value).subscribe(() => {\n        this.cargarPais();\n        this.paisForm.reset();\n      }, error => {\n        console.error('Error al actualizar Datos Personales:', error);\n      });\n    }\n  }\n  eliminarCiudad(id) {\n    if (id) {\n      this.PaisService.deletePais(id).subscribe(data => {\n        console.log('Pais eliminado:', data);\n        this.cargarPais();\n      }, error => {\n        console.error('Error al eliminar Pais:', error);\n      });\n    }\n  }\n  editarDatosP(datosP) {\n    this.paisForm.patchValue(datosP);\n  }\n  static #_ = this.ɵfac = function PaisComponent_Factory(t) {\n    return new (t || PaisComponent)(i0.ɵɵdirectiveInject(i1.PaisService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaisComponent,\n    selectors: [[\"app-pais\"]],\n    decls: 2,\n    vars: 0,\n    template: function PaisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"pais works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","PaisComponent","constructor","PaisService","fb","datosP","paisForm","group","_id","nombre","required","ngOnInit","cargarPais","getPais","subscribe","data","error","console","agregarPais","valid","addPais","value","reset","actualizarDatosP","updatePais","eliminarCiudad","id","deletePais","log","editarDatosP","patchValue","_","i0","ɵɵdirectiveInject","i1","i2","FormBuilder","_2","selectors","decls","vars","template","PaisComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\pais\\pais.component.ts","C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\components\\pais\\pais.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { paisModel } from 'src/app/models/paisModel';\nimport { PaisService } from 'src/app/services/pais.service';\n@Component({\n  selector: 'app-pais',\n  templateUrl: './pais.component.html',\n  styleUrls: ['./pais.component.css']\n})\nexport class PaisComponent implements OnInit {\n  datosP: paisModel[] = [];\n  paisForm: FormGroup;\n\n  constructor(private PaisService: PaisService, private fb: FormBuilder) {\n    this.paisForm = this.fb.group({\n      _id: [''],\n      nombre: [\"\", Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.cargarPais();\n  }\n\n  cargarPais() {\n    this.PaisService.getPais().subscribe(\n      data => {\n        this.datosP = data;\n      },\n      error => {\n        console.error('Error al cargar datos Personales:', error);\n      }\n    );\n  }\n\n  agregarPais() {\n    if (this.paisForm.valid) {\n      this.PaisService.addPais(this.paisForm.value).subscribe(\n        () => {\n          this.cargarPais();\n          this.paisForm.reset();\n        },\n        error => {\n          console.error('Error al agregar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  actualizarDatosP() {\n    if (this.paisForm.valid) {\n      this.PaisService.updatePais(this.paisForm.value).subscribe(\n        () => {\n          this.cargarPais();\n          this.paisForm.reset();\n        },\n        error => {\n          console.error('Error al actualizar Datos Personales:', error);\n        }\n      );\n    }\n  }\n\n  eliminarCiudad(id: string | undefined) {\n    if (id) {\n      this.PaisService.deletePais(id).subscribe(\n        data => {\n          console.log('Pais eliminado:', data);\n          this.cargarPais();\n        },\n        error => {\n          console.error('Error al eliminar Pais:', error);\n        }\n      );\n    }\n  }\n\n  editarDatosP(datosP: paisModel) {\n    this.paisForm.patchValue(datosP);\n  }\n}\n","<p>pais works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,WAAwB,EAAUC,EAAe;IAAjD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,EAAE,GAAFA,EAAE;IAHxD,KAAAC,MAAM,GAAgB,EAAE;IAItB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,GAAG,EAAE,CAAC,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ;KACjC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACT,WAAW,CAACU,OAAO,EAAE,CAACC,SAAS,CAClCC,IAAI,IAAG;MACL,IAAI,CAACV,MAAM,GAAGU,IAAI;IACpB,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CACF;EACH;EAEAE,WAAWA,CAAA;IACT,IAAI,IAAI,CAACZ,QAAQ,CAACa,KAAK,EAAE;MACvB,IAAI,CAAChB,WAAW,CAACiB,OAAO,CAAC,IAAI,CAACd,QAAQ,CAACe,KAAK,CAAC,CAACP,SAAS,CACrD,MAAK;QACH,IAAI,CAACF,UAAU,EAAE;QACjB,IAAI,CAACN,QAAQ,CAACgB,KAAK,EAAE;MACvB,CAAC,EACDN,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,CACF;;EAEL;EAEAO,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACjB,QAAQ,CAACa,KAAK,EAAE;MACvB,IAAI,CAAChB,WAAW,CAACqB,UAAU,CAAC,IAAI,CAAClB,QAAQ,CAACe,KAAK,CAAC,CAACP,SAAS,CACxD,MAAK;QACH,IAAI,CAACF,UAAU,EAAE;QACjB,IAAI,CAACN,QAAQ,CAACgB,KAAK,EAAE;MACvB,CAAC,EACDN,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CACF;;EAEL;EAEAS,cAAcA,CAACC,EAAsB;IACnC,IAAIA,EAAE,EAAE;MACN,IAAI,CAACvB,WAAW,CAACwB,UAAU,CAACD,EAAE,CAAC,CAACZ,SAAS,CACvCC,IAAI,IAAG;QACLE,OAAO,CAACW,GAAG,CAAC,iBAAiB,EAAEb,IAAI,CAAC;QACpC,IAAI,CAACH,UAAU,EAAE;MACnB,CAAC,EACDI,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CACF;;EAEL;EAEAa,YAAYA,CAACxB,MAAiB;IAC5B,IAAI,CAACC,QAAQ,CAACwB,UAAU,CAACzB,MAAM,CAAC;EAClC;EAAC,QAAA0B,CAAA,G;qBAtEU9B,aAAa,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAA/B,WAAA,GAAA6B,EAAA,CAAAC,iBAAA,CAAAE,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbpC,aAAa;IAAAqC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1BX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,kBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}