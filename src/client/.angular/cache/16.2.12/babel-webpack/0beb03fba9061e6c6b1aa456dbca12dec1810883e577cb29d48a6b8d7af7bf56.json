{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class lugarService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getLugar() {\n    return this.http.get(`${this.domain}/api/lugar`).pipe(map(res => res));\n  }\n  addLugar(newLugar) {\n    return this.http.post(`${this.domain}/api/lugar`, newLugar).pipe(map(res => res));\n  }\n  deleteLugar(id) {\n    return this.http.delete(`${this.domain}/api/lugar/${id}`).pipe(map(res => res));\n  }\n  update(newLugar) {\n    return this.http.put(`${this.domain}/api/lugar/${newLugar._id}`, newLugar).pipe(map(res => res));\n  }\n  static #_ = this.ɵfac = function lugarService_Factory(t) {\n    return new (t || lugarService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: lugarService,\n    factory: lugarService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","lugarService","constructor","http","domain","getLugar","get","pipe","res","addLugar","newLugar","post","deleteLugar","id","delete","update","put","_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngular\\src\\client\\src\\app\\services\\lugar.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { lugarModel } from '../models/lugarModel';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class lugarService {\n\n  constructor(private http: HttpClient) { }\n  domain: string=\"http://localhost:3000\";\n  getLugar() {\n    return this.http.get<lugarModel[]>(`${this.domain}/api/lugar`).pipe(\n      map(res => res)\n    );\n  }\n\n  addLugar(newLugar: lugarModel){\n    return this.http.post<lugarModel>(`${this.domain}/api/lugar`,newLugar).pipe(\n      map(res => res)\n      );\n  }\n\n  deleteLugar(id: string){\n    return this.http.delete<lugarModel>(`${this.domain}/api/lugar/${id}`).pipe(\n      map(res => res)\n      );\n  }\n  update(newLugar: lugarModel) {\n    return this.http.put(`${this.domain}/api/lugar/${newLugar._id}`, newLugar).pipe(\n      map(res => res)\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAIpC,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,YAAY,CAAC,CAACG,IAAI,CACjEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAEAC,QAAQA,CAACC,QAAoB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAa,GAAG,IAAI,CAACP,MAAM,YAAY,EAACM,QAAQ,CAAC,CAACH,IAAI,CACzEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EAEAI,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAa,GAAG,IAAI,CAACV,MAAM,cAAcS,EAAE,EAAE,CAAC,CAACN,IAAI,CACxEP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CACd;EACL;EACAO,MAAMA,CAACL,QAAoB;IACzB,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,cAAcM,QAAQ,CAACO,GAAG,EAAE,EAAEP,QAAQ,CAAC,CAACH,IAAI,CAC7EP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAAC,CAChB;EACH;EAAC,QAAAU,CAAA,G;qBAzBUjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}