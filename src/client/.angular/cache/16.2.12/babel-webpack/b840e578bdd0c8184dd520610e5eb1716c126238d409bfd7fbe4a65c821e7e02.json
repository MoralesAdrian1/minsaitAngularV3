{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(userService, fb, router) {\n    this.userService = userService;\n    this.fb = fb;\n    this.router = router;\n    this.user = [];\n    this.userForm = this.fb.group({\n      _id: [''],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n      status: [\"User\", Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.cargarUser();\n  }\n  cargarUser() {\n    this.userService.getUser().subscribe(data => {\n      this.user = data;\n    }, error => {\n      console.error('Error al cargar user:', error);\n    });\n  }\n  agregarUser() {\n    if (this.userForm.valid) {\n      this.userService.addUser(this.userForm.value).subscribe(() => {\n        this.cargarUser();\n        this.userForm.reset();\n        // Redireccionar al componente deseado después del registro\n        this.router.navigate(['/datosP']);\n      }, error => {\n        console.error('Error al agregar user:', error);\n      });\n    }\n  }\n  actualizarUser() {\n    if (this.userForm.valid) {\n      this.userService.updateUser(this.userForm.value).subscribe(() => {\n        this.cargarUser();\n        this.userForm.reset();\n      }, error => {\n        console.error('Error al actualizar user:', error);\n      });\n    }\n  }\n  eliminarUser(id) {\n    if (id) {\n      this.userService.deleteUser(id).subscribe(data => {\n        console.log('user eliminado:', data);\n        this.cargarUser();\n      }, error => {\n        console.error('Error al eliminar user:', error);\n      });\n    }\n  }\n  editarUser(user) {\n    this.userForm.patchValue(user);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","userService","fb","router","user","userForm","group","_id","username","required","email","password","status","ngOnInit","cargarUser","getUser","subscribe","data","error","console","agregarUser","valid","addUser","value","reset","navigate","actualizarUser","updateUser","eliminarUser","id","deleteUser","log","editarUser","patchValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { userModel } from 'src/app/models/userModel';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: userModel[] = [];\r\n  userForm: FormGroup;\r\n\r\n  constructor(private userService: UserService, private fb: FormBuilder, private router: Router) {\r\n    this.userForm = this.fb.group({\r\n      _id: [''],\r\n      username: [\"\", Validators.required],\r\n      email: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n      status: [\"User\", Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarUser();\r\n  }\r\n\r\n  cargarUser() {\r\n    this.userService.getUser().subscribe(\r\n      data => {\r\n        this.user = data;\r\n      },\r\n      error => {\r\n        console.error('Error al cargar user:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  agregarUser() {\r\n    if (this.userForm.valid) {\r\n      this.userService.addUser(this.userForm.value).subscribe(\r\n        () => {\r\n          this.cargarUser();\r\n          this.userForm.reset();\r\n          // Redireccionar al componente deseado después del registro\r\n          this.router.navigate(['/datosP']);\r\n        },\r\n        error => {\r\n          console.error('Error al agregar user:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actualizarUser() {\r\n    if (this.userForm.valid) {\r\n      this.userService.updateUser(this.userForm.value).subscribe(\r\n        () => {\r\n          this.cargarUser();\r\n          this.userForm.reset();\r\n        },\r\n        error => {\r\n          console.error('Error al actualizar user:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  eliminarUser(id: string | undefined) {\r\n    if (id) {\r\n      this.userService.deleteUser(id).subscribe(\r\n        data => {\r\n          console.log('user eliminado:', data);\r\n          this.cargarUser();\r\n        },\r\n        error => {\r\n          console.error('Error al eliminar user:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  editarUser(user: userModel) {\r\n    this.userForm.patchValue(user);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}