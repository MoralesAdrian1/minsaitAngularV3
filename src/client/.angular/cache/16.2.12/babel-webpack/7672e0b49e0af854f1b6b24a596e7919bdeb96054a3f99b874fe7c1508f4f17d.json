{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlantillaCvService {\n  constructor(http) {\n    this.http = http;\n    this.datosPUrl = 'http://localhost:3000/api/datosP'; // Ajusta la URL según tu API\n    this.datosLUrl = 'http://localhost:3000/api/datosL';\n    this.datosEsUrl = 'http://localhost:3000/api/datosEs';\n    this.datosExUrl = 'http://localhost:3000/api/datosEx'; // Ajusta la URL según tu API\n  }\n\n  getDatosP() {\n    return this.http.get(this.datosPUrl);\n  }\n  getPerfil() {\n    return this.http.get(this.datosLUrl);\n  }\n  getDatosEs() {\n    return this.http.get(this.datosEsUrl);\n  }\n  getDatosEx() {\n    return this.http.get(this.datosExUrl);\n  }\n  static #_ = this.ɵfac = function PlantillaCvService_Factory(t) {\n    return new (t || PlantillaCvService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlantillaCvService,\n    factory: PlantillaCvService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlantillaCvService","constructor","http","datosPUrl","datosLUrl","datosEsUrl","datosExUrl","getDatosP","get","getPerfil","getDatosEs","getDatosEx","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lexag\\Desktop\\minsaitAngularV2\\src\\client\\src\\app\\services\\plantilla-cv.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DatosCvModel, DatosEsCvModel, DatosExCVModel, PerfilCvModel } from '../models/plantillaCvModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlantillaCvService {\r\n\r\n  private datosPUrl = 'http://localhost:3000/api/datosP'; // Ajusta la URL según tu API\r\n  private datosLUrl = 'http://localhost:3000/api/datosL';\r\n  private datosEsUrl = 'http://localhost:3000/api/datosEs';\r\n  private datosExUrl = 'http://localhost:3000/api/datosEx'; // Ajusta la URL según tu API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDatosP(): Observable<DatosCvModel[]> {\r\n    return this.http.get<DatosCvModel[]>(this.datosPUrl);\r\n  }\r\n\r\n  getPerfil(): Observable<PerfilCvModel[]> {\r\n    return this.http.get<PerfilCvModel[]>(this.datosLUrl);\r\n  }\r\ngetDatosEs(): Observable<DatosEsCvModel[]> {\r\n  return this.http.get<DatosEsCvModel[]>(this.datosEsUrl);\r\n  }\r\ngetDatosEx(): Observable<DatosExCVModel[]> {\r\n  return this.http.get<DatosExCVModel[]>(this.datosExUrl);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAO7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,SAAS,GAAG,kCAAkC,CAAC,CAAC;IAChD,KAAAC,SAAS,GAAG,kCAAkC;IAC9C,KAAAC,UAAU,GAAG,mCAAmC;IAChD,KAAAC,UAAU,GAAG,mCAAmC,CAAC,CAAC;EAElB;;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAiB,IAAI,CAACL,SAAS,CAAC;EACtD;EAEAM,SAASA,CAAA;IACP,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAkB,IAAI,CAACJ,SAAS,CAAC;EACvD;EACFM,UAAUA,CAAA;IACR,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAmB,IAAI,CAACH,UAAU,CAAC;EACvD;EACFM,UAAUA,CAAA;IACR,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAmB,IAAI,CAACF,UAAU,CAAC;EACvD;EAAC,QAAAM,CAAA,G;qBArBUZ,kBAAkB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBjB,kBAAkB;IAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}