{"ast":null,"code":"import { map } from 'rxjs/operators'; // Cambio en la importación de 'map'\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PerfilAdminService {\n  constructor(http) {\n    this.http = http;\n    this.domain = \"http://localhost:3000\";\n  }\n  getPerfil() {\n    return this.http.get(`${this.domain}/api/perfil`).pipe(\n    // Cambio en el tipo de retorno\n    map(res => res.map(item => this.parsePerfilModel(item))) // Mapea cada elemento al tipo PerfilModel\n    );\n  }\n\n  addPerfil(newPerfil) {\n    return this.http.post(`${this.domain}/api/perfil`, this.parsePerfilData(newPerfil)).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n\n  deletePerfil(id) {\n    return this.http.delete(`${this.domain}/api/perfil/${id}`).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n\n  updatePerfil(newPerfil) {\n    return this.http.put(`${this.domain}/api/perfil/${newPerfil._id}`, this.parsePerfilData(newPerfil)).pipe(\n    // Cambio en el tipo de retorno\n    map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\n    );\n  }\n  // Método para convertir datos del PerfilModel a formato adecuado para enviar al servidor\n  parsePerfilData(perfil) {\n    // Aquí puedes implementar la lógica necesaria para convertir el modelo al formato requerido por el servidor\n    return perfil;\n  }\n  // Método para convertir la respuesta del servidor al tipo PerfilModel\n  parsePerfilModel(data) {\n    // Aquí puedes implementar la lógica necesaria para convertir la respuesta del servidor al tipo PerfilModel\n    return data;\n  }\n  static #_ = this.ɵfac = function PerfilAdminService_Factory(t) {\n    return new (t || PerfilAdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PerfilAdminService,\n    factory: PerfilAdminService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","PerfilAdminService","constructor","http","domain","getPerfil","get","pipe","res","item","parsePerfilModel","addPerfil","newPerfil","post","parsePerfilData","deletePerfil","id","delete","updatePerfil","put","_id","perfil","data","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Dev\\Angular\\minsaitAngularV3\\src\\client\\src\\app\\services\\perfil-admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PerfilModel } from '../models/perfilModel';\r\nimport { map } from 'rxjs/operators'; // Cambio en la importación de 'map'\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PerfilAdminService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  domain: string=\"http://localhost:3000\";\r\n  getPerfil() {\r\n    return this.http.get<any[]>(`${this.domain}/api/perfil`).pipe( // Cambio en el tipo de retorno\r\n      map(res => res.map(item => this.parsePerfilModel(item))) // Mapea cada elemento al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  addPerfil(newPerfil: PerfilModel){\r\n    return this.http.post<any>(`${this.domain}/api/perfil`, this.parsePerfilData(newPerfil)).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  deletePerfil(id: string){\r\n    return this.http.delete<any>(`${this.domain}/api/perfil/${id}`).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n  \r\n  updatePerfil(newPerfil: PerfilModel) {\r\n    return this.http.put<any>(`${this.domain}/api/perfil/${newPerfil._id}`, this.parsePerfilData(newPerfil)).pipe( // Cambio en el tipo de retorno\r\n      map(res => this.parsePerfilModel(res)) // Mapea la respuesta al tipo PerfilModel\r\n    );\r\n  }\r\n\r\n  // Método para convertir datos del PerfilModel a formato adecuado para enviar al servidor\r\n  private parsePerfilData(perfil: PerfilModel): any {\r\n    // Aquí puedes implementar la lógica necesaria para convertir el modelo al formato requerido por el servidor\r\n    return perfil;\r\n  }\r\n\r\n  // Método para convertir la respuesta del servidor al tipo PerfilModel\r\n  private parsePerfilModel(data: any): PerfilModel {\r\n    // Aquí puedes implementar la lógica necesaria para convertir la respuesta del servidor al tipo PerfilModel\r\n    return data as PerfilModel;\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB,CAAC,CAAC;;;AAMtC,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAS,uBAAuB;EADE;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC,CAACG,IAAI;IAAE;IAC7DP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAACR,GAAG,CAACS,IAAI,IAAI,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;KAC1D;EACH;;EAEAE,SAASA,CAACC,SAAsB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,GAAG,IAAI,CAACT,MAAM,aAAa,EAAE,IAAI,CAACU,eAAe,CAACF,SAAS,CAAC,CAAC,CAACL,IAAI;IAAE;IAC7FP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,gBAAgB,CAACF,GAAG,CAAC,CAAC,CAAC;KACxC;EACH;;EAEAO,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACb,IAAI,CAACc,MAAM,CAAM,GAAG,IAAI,CAACb,MAAM,eAAeY,EAAE,EAAE,CAAC,CAACT,IAAI;IAAE;IACpEP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,gBAAgB,CAACF,GAAG,CAAC,CAAC,CAAC;KACxC;EACH;;EAEAU,YAAYA,CAACN,SAAsB;IACjC,OAAO,IAAI,CAACT,IAAI,CAACgB,GAAG,CAAM,GAAG,IAAI,CAACf,MAAM,eAAeQ,SAAS,CAACQ,GAAG,EAAE,EAAE,IAAI,CAACN,eAAe,CAACF,SAAS,CAAC,CAAC,CAACL,IAAI;IAAE;IAC7GP,GAAG,CAACQ,GAAG,IAAI,IAAI,CAACE,gBAAgB,CAACF,GAAG,CAAC,CAAC,CAAC;KACxC;EACH;EAEA;EACQM,eAAeA,CAACO,MAAmB;IACzC;IACA,OAAOA,MAAM;EACf;EAEA;EACQX,gBAAgBA,CAACY,IAAS;IAChC;IACA,OAAOA,IAAmB;EAC5B;EAAC,QAAAC,CAAA,G;qBAtCUtB,kBAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB3B,kBAAkB;IAAA4B,OAAA,EAAlB5B,kBAAkB,CAAA6B,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}